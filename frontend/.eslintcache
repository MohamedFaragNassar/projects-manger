[{"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\App.js":"1","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Login.js":"2","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\CTC.js":"3","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\helpers.js":"4","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Status.js":"5","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AddTask.js":"6","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Board.js":"7","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AddUsers.js":"8","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Grid.js":"9","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\SideMenu.js":"10","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Timline.js":"11","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Spinner.js":"12","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ProjectCard.js":"13","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AdditionalColumns.js":"14","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\ProjectScreen.js":"15","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\SignedUser.js":"16","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\RegisterScreen.js":"17","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowDependacy.js":"18","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\index.js":"19","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\queries\\projectQueries.js":"20","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\queries\\userQueries.js":"21","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\dragAndDrop.js":"22","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Relation.js":"23","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\UpdateProfile.js":"24","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ProtectedRoute.js":"25","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\Profile.js":"26","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\SignScreen.js":"27","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\Main.js":"28","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowAssghnedTo.js":"29","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\TaskMenu.js":"30","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\unSignedUser.js":"31","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Node.js":"32","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Assigh.js":"33","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ClickToClose.js":"34","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\GhuestScreen.js":"35","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\TaskCard.js":"36","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Bar.js":"37","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowProjects.js":"38","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Filters.js":"39","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\GroupSearch.js":"40"},{"size":2152,"mtime":1615637639761,"results":"41","hashOfConfig":"42"},{"size":2031,"mtime":1610707953008,"results":"43","hashOfConfig":"42"},{"size":731,"mtime":1610019557270,"results":"44","hashOfConfig":"42"},{"size":1934,"mtime":1615641494178,"results":"45","hashOfConfig":"42"},{"size":442,"mtime":1615378591396,"results":"46","hashOfConfig":"42"},{"size":7997,"mtime":1615291774668,"results":"47","hashOfConfig":"42"},{"size":6499,"mtime":1615294218562,"results":"48","hashOfConfig":"42"},{"size":4351,"mtime":1615202698568,"results":"49","hashOfConfig":"42"},{"size":8326,"mtime":1615292684565,"results":"50","hashOfConfig":"42"},{"size":2711,"mtime":1615487641246,"results":"51","hashOfConfig":"42"},{"size":3576,"mtime":1615641879504,"results":"52","hashOfConfig":"42"},{"size":143,"mtime":1610000834484,"results":"53","hashOfConfig":"42"},{"size":1991,"mtime":1615202698579,"results":"54","hashOfConfig":"42"},{"size":2067,"mtime":1615202698569,"results":"55","hashOfConfig":"42"},{"size":7057,"mtime":1615548783065,"results":"56","hashOfConfig":"42"},{"size":1671,"mtime":1615638629056,"results":"57","hashOfConfig":"42"},{"size":3472,"mtime":1610001247467,"results":"58","hashOfConfig":"42"},{"size":1031,"mtime":1615202698582,"results":"59","hashOfConfig":"42"},{"size":1363,"mtime":1615202698592,"results":"60","hashOfConfig":"42"},{"size":6764,"mtime":1615379521331,"results":"61","hashOfConfig":"42"},{"size":682,"mtime":1609138481650,"results":"62","hashOfConfig":"42"},{"size":526,"mtime":1608212760673,"results":"63","hashOfConfig":"42"},{"size":3712,"mtime":1615388456439,"results":"64","hashOfConfig":"42"},{"size":4327,"mtime":1610719728373,"results":"65","hashOfConfig":"42"},{"size":513,"mtime":1615637877920,"results":"66","hashOfConfig":"42"},{"size":3755,"mtime":1615638601996,"results":"67","hashOfConfig":"42"},{"size":838,"mtime":1615635330317,"results":"68","hashOfConfig":"42"},{"size":3038,"mtime":1615635731588,"results":"69","hashOfConfig":"42"},{"size":344,"mtime":1615202698581,"results":"70","hashOfConfig":"42"},{"size":1412,"mtime":1615292618411,"results":"71","hashOfConfig":"42"},{"size":303,"mtime":1606993010514,"results":"72","hashOfConfig":"42"},{"size":273,"mtime":1615548552485,"results":"73","hashOfConfig":"42"},{"size":2283,"mtime":1615638573734,"results":"74","hashOfConfig":"42"},{"size":703,"mtime":1606898091033,"results":"75","hashOfConfig":"42"},{"size":1577,"mtime":1615638238675,"results":"76","hashOfConfig":"42"},{"size":2376,"mtime":1615291742371,"results":"77","hashOfConfig":"42"},{"size":1025,"mtime":1615548622200,"results":"78","hashOfConfig":"42"},{"size":3883,"mtime":1609321660655,"results":"79","hashOfConfig":"42"},{"size":3720,"mtime":1615202698573,"results":"80","hashOfConfig":"42"},{"size":2676,"mtime":1615319323801,"results":"81","hashOfConfig":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1czucod",{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"120"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"149","messages":"150","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"96"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"158"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"87"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"175"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"100"},"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\App.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Login.js",["181","182"],"import React, {useEffect, useState } from 'react'\r\nimport {useMutation} from '@apollo/client'\r\nimport {loginQuery} from '../queries/userQueries'\r\nimport { Link, Redirect, useHistory } from 'react-router-dom'\r\nimport Status from '../components/Status'\r\nimport Spinner from '../components/Spinner'\r\n\r\nconst Login = () => {\r\n    const [email,setEmail] = useState()\r\n    const [password,setPassword] = useState()\r\n    const [error,setError] = useState()\r\n    const [data,setData] = useState()\r\n\r\n    const [logUserIn, {loading}] = useMutation(loginQuery)\r\n    const history = useHistory();\r\n\r\n    \r\n    const handlSignin = async(e) =>{\r\n        e.preventDefault()\r\n        try{\r\n           const {data} = await logUserIn({\r\n                variables:{\r\n                    email,\r\n                    password\r\n                }\r\n            })\r\n            if(data){\r\n                localStorage.setItem(\"userInfo\",JSON.stringify(data.login))\r\n                setData(data)\r\n            }\r\n        }catch(error){\r\n            setError(error)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(data){\r\n            window.location.href = \"/\"\r\n        }\r\n    },[data])\r\n    \r\n    return <>\r\n        <form onSubmit={(e)=>handlSignin(e)} className=\"login-form\">\r\n                <h3>Welcome</h3>\r\n                <div>\r\n                    <label>Email </label>\r\n                    <input onChange={(e)=>setEmail(e.target.value)} type=\"email\" required={true} />\r\n                </div>\r\n                <div>\r\n                    <label>Password </label>\r\n                    <input onChange={(e)=>setPassword(e.target.value)} type=\"password\" required={true} />\r\n                </div>\r\n                <section>\r\n                    <button type=\"submit\">Sign in</button>\r\n                    <Link to=\"/signup\" >create new account </Link>\r\n                </section>\r\n                {loading?<Spinner/>:error?<Status isOpen={true} message={error.message} />:null}\r\n        </form>\r\n            \r\n    </>\r\n}\r\n\r\nexport default Login\r\n",["183","184"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\CTC.js",["185"],"import React, { useEffect, useRef } from \"react\"\r\n\r\nconst useClickToClose = (closeHandler,selector) =>{\r\n  let node = useRef();\r\n  useEffect(() => {\r\n         let clickHandler\r\n         if(node.current){\r\n            clickHandler = (e)=>{\r\n                const element = document.querySelector(selector)\r\n                if(element){\r\n                    if(!element.contains(e.target)){\r\n                        closeHandler()\r\n                    }\r\n                }\r\n\r\n            }\r\n         }\r\n       \r\n        \r\n    document.addEventListener(\"mousedown\", clickHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", clickHandler);\r\n    };\r\n\r\n  });\r\n\r\n  return node;\r\n}\r\n\r\nexport  {useClickToClose};","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\helpers.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Status.js",["186","187"],"import React, { useEffect, useState } from 'react'\r\n\r\nconst Status = ({status,message,close}) => {\r\n    return <>\r\n        <div id=\"status\">\r\n            <span className={`status-${status}`}><i class=\"fas fa-times-circle\"></i> </span>\r\n            <span className=\"status-message\">{message}</span>\r\n            <button onClick={close} ><i class=\"fas fa-times-circle\"></i></button>\r\n        </div>\r\n    </>\r\n    \r\n}\r\n\r\nexport default Status;\r\n",["188","189"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AddTask.js",["190","191","192","193","194"],"import React, { useState } from 'react'\r\nimport {useMutation} from '@apollo/client'\r\nimport {updateTaskMutation,getProjectDetailsQuery\r\n        ,addDependaciesForTaskMutation} from '../queries/projectQueries'\r\nimport {debounce} from '../helpers/helpers'\r\nimport GroupSearch from '../components/GroupSearch'\r\nimport ShowDependacy from '../components/ShowDependacy'\r\nimport {modifyDate,removeDays,addDays} from '../helpers/helpers'\r\nimport {getDuration} from '../helpers/helpers'\r\nimport {useClickToClose} from '../helpers/CTC'\r\nimport Assigh from './Assigh'\r\n\r\nconst AddTask = (props) => {\r\n    const userData = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null \r\n    let userID \r\n    if(userData){\r\n        userID = userData.id\r\n    }\r\n\r\n    const project = props.project\r\n    const taskID = props.task\r\n    const task =project.tasks.find(item => {return item._id == taskID})\r\n    \r\n    const node = props.domNode\r\n    let isAllowed\r\n   \r\nif(task){\r\n    if(project.owner._id == userID || task.assignedTo.some(user => user._id == userID) ){\r\n        isAllowed = true\r\n    }\r\n}\r\n\r\nconst hideGroupSearch = ()=>{\r\n    const menu = document.querySelector(\".group-search-containerv2\")\r\n    menu.classList.add(\"hide-v\")\r\n}\r\n\r\nconst domNode = useClickToClose(hideGroupSearch,\".group-search-containerv2\")\r\n    \r\n\r\n    \r\n    const projectStart = modifyDate(project.createdAt)\r\n\r\n    const [updateTask] = useMutation(updateTaskMutation)\r\n    const [addDependacy] = useMutation(addDependaciesForTaskMutation)\r\n\r\n\r\n\r\n    const updateTaskHandler = debounce((item)=>{\r\n        updateTask({variables:{\r\n            id:task._id,\r\n            updatedFields: item,\r\n        },\r\n        refetchQueries:[{query:getProjectDetailsQuery,variables:{\r\n            id:project._id\r\n        }}]})\r\n    },2000)\r\n\r\n    const addDependacyHandler = (taskID,field) => {\r\n        addDependacy({\r\n            variables:{\r\n                id:task._id,\r\n                taskID,\r\n                field\r\n            },\r\n            refetchQueries:[{query:getProjectDetailsQuery,variables:{\r\n                id:project._id\r\n            }}]\r\n        })\r\n    }\r\n\r\n    \r\n    const showGroupSearch = (e)=>{\r\n        const menu = e.target.offsetParent.querySelector(\"#group-search\")\r\n        menu.classList.remove(\"hide-v\")\r\n    }\r\n\r\n  const filterGroup = (array,filter) =>{\r\n     return array.filter((el) => {\r\n        return !filter.some((f) => {\r\n             return f._id === el._id;\r\n             });\r\n        });\r\n    }\r\n  \r\n \r\n\r\n    if(!props.isOpen){\r\n        return null\r\n    }\r\n    return <>\r\n        <div ref={node}  className=\"add-task\">\r\n            <div className=\"single assign-users\">\r\n                <button onClick={(e)=>showGroupSearch(e)}><i className=\"fas fa-user-plus\"></i></button>\r\n               <div style={{position:\"relative\"}}>\r\n                    <Assigh users={task.assignedTo} taskID={taskID} projectID={project._id} type=\"grid\" />\r\n               </div>\r\n                <GroupSearch group={filterGroup(project.group,task.assignedTo)} type=\"add\" \r\n                 position={\"group-search-containerv2\"} domNode={domNode} taskID={taskID} projectID={project._id} />\r\n                \r\n            </div>\r\n            <div className=\"single\">\r\n                <label>Name</label>\r\n                <input onChange={(e)=>updateTaskHandler({name:e.target.value})} defaultValue={task.name} readOnly={!isAllowed} type=\"text\"/>\r\n            </div>\r\n            <div  className=\"double\">\r\n                <div>\r\n                    <label>Start</label>\r\n                    <input min={projectStart} max={task.end?removeDays(task.end,1).toISOString().split('T')[0]:null}\r\n                    onChange={(e)=>updateTaskHandler({start:e.target.value})} readOnly={!isAllowed} defaultValue={task.start} \r\n                     type=\"date\"/>\r\n                </div>\r\n                <div>\r\n                    <label>End</label>\r\n                    <input min={task.start?addDays(task.start,1).toISOString().split('T')[0]:null}\r\n                    onChange={(e)=>updateTaskHandler({end:e.target.value})} readOnly={!isAllowed} defaultValue={task.end} \r\n                     type=\"date\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"double\" >\r\n                <div>\r\n                    <label>duration</label>\r\n                    <input onChange={(e)=>updateTaskHandler({duration:Number(e.target.value)})} \r\n                    readOnly={true} defaultValue={task.duration} \r\n                    defaultValue={task.start&&task.end ? getDuration(task.start,task.end):null}  type=\"number\"/>\r\n                </div>\r\n                <div>\r\n                    <label>Completed </label>\r\n                    <input onChange={(e)=>updateTaskHandler({completion:Number(e.target.value)})} readOnly={!isAllowed} defaultValue={task.completion}  type=\"number\"/>\r\n                </div>\r\n            </div>\r\n            <div className=\"single\">\r\n                <label>Bucket</label>\r\n                <select disabled={!isAllowed} defaultValue={task.bucket}  >\r\n                    <option value={null} >-</option>\r\n                    {project.buckets.map(bucket => \r\n                        <option onClickCapture={(e)=>updateTaskHandler({bucket:e.target.value})}>{bucket}</option>\r\n                    )\r\n                }</select>\r\n            </div>\r\n           <div className=\"trible\">\r\n                <div>\r\n                    <label>effort</label>\r\n                    <input  onChange={(e)=>updateTaskHandler({totalEffort:Number(e.target.value)})} readOnly={!isAllowed} defaultValue={task.totalEffort}  type=\"number\"/>\r\n                </div>\r\n                <div>\r\n                    <label>done </label>\r\n                    <input onChange={(e)=>updateTaskHandler({doneEffort:Number(e.target.value)})} readOnly={!isAllowed} defaultValue={task.doneEffort}  type=\"number\"/>\r\n                </div>\r\n                <div>\r\n                    <label>remainning </label>\r\n                    <input  defaultValue={task.totalEffort - task.doneEffort} type=\"number\" readOnly/>\r\n                </div>\r\n            </div>\r\n            <div className=\"dependacy\">\r\n                { isAllowed ? <div className=\"single\" >\r\n                    <label>Depends On</label>\r\n                    <select defaultValue={task.dependsOn[0]}  >{\r\n                        project.tasks.map(task => \r\n                            <option onClickCapture={(e)=>addDependacyHandler(task._id,\"dependsOn\")}>\r\n                                {task.name}\r\n                            </option>\r\n                        )    \r\n                    }</select>\r\n                </div> :null }\r\n                <div className=\"show-dependacy-container\" >\r\n                    {task.dependsOn.map(task =>\r\n                       <ShowDependacy task={task} id={taskID} projectID={project._id} field=\"dependsOn\" isAllowed={isAllowed} />\r\n                    )}\r\n                </div>\r\n               \r\n            </div>\r\n            <div className=\"dependacy\">\r\n                {isAllowed?<div className=\"single\">\r\n                    <label>Dependants</label>\r\n                    <select defaultValue={task.dependants[0]}  >\r\n                    {\r\n                        project.tasks.map(task => \r\n                            <option onClickCapture={(e)=>addDependacyHandler(task._id,\"dependants\")} >\r\n                                {task.name}\r\n                            </option>\r\n                        )    \r\n                    }\r\n                    </select>\r\n                </div>:null}\r\n                <div className=\"show-dependacy-container\" >\r\n                    {task.dependants.map(task =>\r\n                        <ShowDependacy task={task} id={taskID} projectID={project._id} field=\"dependants\" isAllowed={isAllowed}/>\r\n                    )}\r\n                </div>\r\n                \r\n            </div>\r\n          </div>\r\n   </>\r\n}\r\n\r\nexport default AddTask\r\n",["195","196"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Board.js",["197","198","199","200","201","202"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AddUsers.js",["203","204","205"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Grid.js",["206","207","208","209"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\SideMenu.js",[],["210","211"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Timline.js",["212","213"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Spinner.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ProjectCard.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AdditionalColumns.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\ProjectScreen.js",["214","215","216"],"import React, { useEffect, useState } from 'react'\r\nimport Grid from '../components/Grid'\r\nimport Board from '../components/Board'\r\nimport Timline from '../components/Timline'\r\nimport {getProjectDetailsQuery} from '../queries/projectQueries'\r\nimport {useQuery} from '@apollo/client'\r\nimport AddUsers from '../components/AddUsers'\r\nimport GroupSearch from '../components/GroupSearch'\r\nimport {useClickToClose} from '../helpers/CTC'\r\nimport Filters from '../components/Filters'\r\nimport Status from '../components/Status'\r\n\r\n\r\n\r\n\r\nconst ProjectScreen = (props) => {\r\n    const userData = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null \r\n    let userID \r\n    if(userData){\r\n        userID = userData.id\r\n    }\r\n    const id = props.match .params.id;\r\n    \r\n    const [addUserOpen,setAddUserOpen] = useState(false)\r\n    const [view,setView] = useState(\"grid\")\r\n    const [tasks,setTasks] = useState([])\r\n    const [from,setFrom] = useState(0)\r\n    const [to,setTo] = useState(0)\r\n    const [zoom,setZoom] = useState(1)\r\n    const [filters,setFilters] = useState([])\r\n    const [boardfilter,setBoardFilter] = useState(\"bucket\")\r\n\r\n\r\n    const hideGroupSearch = ()=>{\r\n        const menu = document.getElementById(\"group-search\")\r\n        menu.classList.add(\"hide-v\")\r\n    }\r\n    const showGroupSearch = ()=>{\r\n        const menu = document.getElementById(\"group-search\")\r\n        menu.classList.remove(\"hide-v\")\r\n    }\r\n\r\n    const domNode = useClickToClose(hideGroupSearch,\".group-search\")\r\n\r\n    \r\n    const {loading,error,data} = useQuery(getProjectDetailsQuery,{\r\n        variables:{\r\n            id\r\n        }\r\n    })\r\n\r\n    let project\r\n    if(data){\r\n        project  = data.projectDetails\r\n    }\r\n\r\n    const showFilters = ()=>{\r\n        const filters = document.querySelector(\".filters-panel\")\r\n        filters.classList.remove(\"hide-v\")\r\n    }\r\n\r\n    const hideFilters = ()=>{\r\n        const filters = document.querySelector(\".filters-panel\")\r\n        filters.classList.add(\"hide-v\")\r\n    }\r\n\r\n    const filtersNode = useClickToClose(hideFilters,\".filters-panel\")\r\n\r\n    const filterByUser = (element) => {\r\n        setTasks( tasks.filter(task =>{return task.assignedTo.some(user => user._id === element.value)}))\r\n        setFilters([...filters,{filter:\"Group Member\",value:element.attributes.name.value}])\r\n    }\r\n    \r\n    const filterByBucket =(bucket) =>{\r\n        setTasks(tasks.filter(task => {return task.bucket === bucket}))\r\n        setFilters([...filters,{filter:\"Bucket\",value:bucket}])\r\n    }\r\n\r\n    const filterByCompletion = () =>{\r\n        setTasks(tasks.filter(task => {return task.completion >= from && task.completion <= to }))\r\n        setFilters([...filters,{filter:\"Completion\",value:`from : ${from} to : ${to}`}])\r\n    }\r\n\r\n    const filterByDuration = () => {\r\n        setTasks(tasks.filter(task => {return task.duration >= from && task.completion <= to }))\r\n        setFilters([...filters,{filter:\"Duration\",value:`from : ${from} to : ${to}`}])\r\n    }\r\n\r\n    const clearFilters = ()=>{\r\n        setTasks(project.tasks)\r\n        setFilters([])\r\n    }\r\n\r\n \r\n   \r\n\r\n    useEffect(() => {\r\n       \r\n       if(project){\r\n           setTasks(project.tasks)\r\n       }\r\n    }, [data,props])\r\n    \r\n    return <>\r\n       { loading ? \r\n            <div>loading</div>\r\n        : error ?\r\n            <Status isOpen={true} message={error.message} />\r\n       :data? \r\n       <div className=\"project-page\" >\r\n           <div className=\"proj-header\">\r\n                <div>\r\n                    <h1>{project.name}</h1>\r\n                    <div className=\"view-links\">\r\n                        <button onClick={()=>setView(\"grid\")} >Grid</button>\r\n                        <button onClick={()=>setView(\"board\")} >Board</button>\r\n                        <button onClick={()=>setView(\"timline\")} >Timeline</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"manage\" >\r\n                    <div className=\"filter\" >\r\n                       {view === \"board\" ? \r\n                        <>\r\n                            <label>Group by </label>\r\n                            <select defaultValue={boardfilter} >\r\n                                <option onClickCapture={(e)=>setBoardFilter(e.target.value)}>bucket</option>\r\n                                <option  onClickCapture={(e)=>setBoardFilter(e.target.value)} >progresion</option>\r\n                            </select>\r\n                        </> \r\n                        : view===\"grid\"?\r\n                        <>\r\n                            <div className=\"filters\" >\r\n                                <button onClick={()=>showFilters()}>\r\n                                    ({filters.length}) filters\r\n                                    <i class=\"fas fa-filter\"></i>\r\n                                    </button>\r\n                                <Filters project={project} filterByCompletion={filterByCompletion} filterByUser={filterByUser} \r\n                                    filterByBucket={filterByBucket} filterByDuration={filterByDuration} domNode={filtersNode}\r\n                                     clearFilters={clearFilters} filters={filters} setFrom={setFrom} setTo={setTo} />\r\n                            </div>\r\n                        </> : <>\r\n                            <label>zoom</label>\r\n                            <input type=\"range\" min=\".5\" max=\"1.5\" defaultValue=\"1\" step=\".1\" onChange={(e=>setZoom(e.target.value))} />\r\n                        </>}\r\n                    </div>\r\n                    <div className=\"users\">\r\n                        <div className=\"group-members\" >\r\n                            <button onClick={()=> showGroupSearch()} className=\"group-members-btn\" >Group mempers ({project.group.length}) \r\n                                <i class=\"fas fa-chevron-down\"></i>\r\n                            </button>\r\n                            \r\n                        </div>\r\n                        {project.owner._id == userID?<button onClick={()=>setAddUserOpen(true)} className=\"group\" >\r\n                            Add Members<i class=\"fas fa-user-plus\"></i>\r\n                        </button>:null}\r\n                        \r\n                        <GroupSearch  group={project.group} projectID={project._id} type=\"show\"\r\n                         domNode={domNode} position={\"group-search-container\"} />\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"proj-body\" >\r\n                {view===\"grid\"?\r\n                    <Grid  tasks={tasks} project={project}/>:view===\"board\"?\r\n                    <Board filter={boardfilter} project={project}/>:\r\n                    <Timline project={project} zoom={zoom}/>\r\n                }\r\n            </div>\r\n        </div>:null}\r\n\r\n        <AddUsers isOpen={addUserOpen} close={()=>setAddUserOpen(false)} project={project} />\r\n        <svg className=\"draw\" ></svg>\r\n   </>\r\n}\r\n\r\nexport default ProjectScreen\r\n","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\SignedUser.js",["217","218"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowDependacy.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\index.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\queries\\projectQueries.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\queries\\userQueries.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\dragAndDrop.js",[],["219","220"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Relation.js",["221","222","223","224","225","226","227"],"import React, { useEffect, useState } from 'react'\r\n\r\nconst Relation = ({id1,id2,left,index}) => {\r\n\r\n    const colors = ['#16c79a', '#19456b', '#11698e','#e7d9ea', '#583d72', '#fa9579','#fdb827', '#bedbbb', '#839b97'];\r\n    const random_color = colors[Math.floor(Math.random() * colors.length)];\r\n    const [random,setRandome] = useState()\r\n    useEffect(() => {\r\n       setRandome(colors[Math.floor(Math.random() * colors.length)])\r\n    }, [])\r\n    const [x1,setX1] = useState()\r\n    const [y1,sety1] = useState()\r\n   \r\n    let box1 , box2 \r\n    \r\n    useEffect(() => {\r\n        const element1 = document.getElementById(id1)\r\n        const element2 = document.getElementById(id2)\r\n       if(element1,element2){\r\n\r\n           box1 = element1.getBoundingClientRect()\r\n           box2 = element2.getBoundingClientRect()\r\n           sety1(box2.y-box1.y)\r\n           setX1(box2.x-(box1.x+box1.width))\r\n       \r\n       }\r\n        \r\n    }, [x1,index])\r\n    \r\n        \r\n   \r\n    return <>\r\n        {y1 > 0 ?\r\n        <svg className=\"draw\" style={{left:left+\"px\"}} >\r\n            <polyline points={`0,0 0,${y1} ${x1+left},${y1}`} fill=\"none\" strokeWidth=\"4\" stroke={random} />\r\n        </svg>\r\n        :\r\n        <svg className=\"drawv2\" style={{left:left+\"px\"}} >\r\n            <polyline points={`0,600 25,600 25,${600+y1} ${x1},${600+y1}`} fill=\"none\" strokeWidth=\"4\" stroke={random} />\r\n        </svg>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Relation\r\n\r\n{/* <div className=\"timeline\">\r\n            <div className=\"changing-date\">{cdate ? cdate:null}</div>\r\n            <div className=\"timeline-side\" ></div>\r\n            <div className=\"timeline-main\">\r\n                {project.tasks.map(task => {\r\n                    const days = getDeffrenceInDays(task.end,task.start)\r\n                    const daysBeforStart =getDeffrenceInDays(task.start,modifyDate(project.createdAt))\r\n                   \r\n                  return ( <div className=\"timline-task\"  >\r\n                       <Bar length={days} befor={daysBeforStart} task={task} handleEditEndDate={handleEditEndDate} \r\n                        handleEditStartDate={handleEditStartDate} /> \r\n                        <div className=\"row-grid\">\r\n                            {grid.map(x => \r\n                                <Node index = {x+1} setIndex={setIndex} />    \r\n                            )}\r\n                        </div>\r\n                   </div>) \r\n                }\r\n                )}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n} */}\r\n\r\n\r\n{/* <svg  width=\"62\" height=\"600\" pointer-events=\"none\" position=\"absolute\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n\r\n<path d=\"M 0 0 L 25 0 A 3 3 0 0,1 28 3 L 28 250  A 3 3 0 0,0 31 253 L 56 253 \" transform=\"translate(3,3)\" pointer-events=\"visibleStroke\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"rgb(132, 172, 179)\"  stroke-width=\"4\"></path>\r\n\r\n</svg>\r\n<svg  width=\"62\" height=\"600\" pointer-events=\"none\" position=\"absolute\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n    <path d=\"M 50 0 L 25 0 A 3 3 0 0,0 24 3 L 25 250  A 3 3 0 0,1 24 253 L 0 253 \" transform=\"translate(3,3)\" pointer-events=\"visibleStroke\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"rgb(132, 172, 179)\" stroke-width=\"5\"></path>\r\n</svg> */}\r\n\r\n/* \r\n<path d={`M ${box1.x} ${box1.y} L ${box1.x+25} ${box1.y} A 3 3 0 0,1 ${box1.x+28} ${box1.y+3} L ${box1.x+28} ${box1.y+250}  A 3 3 0 0,0 ${box1.x+31} ${box1.y+253} L ${box1.x+56} ${box1.y+253} `}\r\n             transform=\"translate(3,3)\" pointer-events=\"visibleStroke\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \r\n             fill=\"none\" stroke=\"rgb(132, 172, 179)\"   stroke-width=\"4\"></path> */","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\UpdateProfile.js",["228"],"import React, { useState } from 'react'\r\nimport {changePasswordMutation,getProfileInfoQuery,updateProfileMutation} from '../queries/projectQueries'\r\nimport {useMutation} from '@apollo/client'\r\nimport Status from './Status'\r\nimport Spinner from './Spinner'\r\n\r\nconst UpdateProfile = ({isOpen,user,node,close}) => {\r\n    const userData = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")):null \r\n\r\n    const [currentPassword,setCurrentPassword] = useState()\r\n    const [newPassword,setNewPassword] = useState()\r\n    const [confirmPassword,setConfirmPassword] = useState()\r\n    const [error,setError] = useState()\r\n\r\n    const [fullName,setFullName] = useState()\r\n    const [userName,setUserName] = useState()\r\n    const [email,setEmail] = useState()\r\n    \r\n    const [changePassword,{loading}] = useMutation(changePasswordMutation)\r\n    const [updateProfile,{loading:updateProfileLoading}] = useMutation(updateProfileMutation)\r\n\r\n    const handleChangePassword = async (e)=>{\r\n        e.preventDefault()\r\n        if(confirmPassword != newPassword){\r\n            setError(\"password should match\")\r\n            return\r\n        }\r\n       try{\r\n            const {data} = await changePassword({\r\n                variables:{\r\n                    currentPassword,\r\n                    newPassword\r\n                },\r\n            })\r\n            if(data){\r\n                localStorage.setItem(\"userInfo\",JSON.stringify(data.changePassword))\r\n            }\r\n            \r\n        }catch(err){\r\n            setError(err.message)\r\n        }\r\n    }\r\n\r\n    const handleUpdateProfile = async()=>{\r\n        try{\r\n           const {data} =  await updateProfile({\r\n                variables:{\r\n                    user:{\r\n                        userName,\r\n                        fullName,\r\n                        email\r\n                    },\r\n                },\r\n                refetchQueries:[{query:getProfileInfoQuery,variables:{id:userData.id}}]\r\n            })\r\n            if(data){\r\n                close()\r\n            }\r\n        }catch(err){\r\n            setError(err.message)\r\n        }\r\n\r\n    }\r\n\r\n    if(!isOpen){\r\n        return null\r\n    }\r\n    return<>\r\n        {userData&&<><div className=\"overlay\" ></div>\r\n        <div ref={node} className=\"edit-profile\" >\r\n            <h2 >Edit Profile</h2>\r\n            <div className=\"update-info\" >\r\n                <span className=\"edit-profile-header\" >Update Profile</span>\r\n                <div>\r\n                    <label>userName</label>\r\n                    <input onChange={(e)=>setUserName(e.target.value)} defaultValue={user.userName} type=\"text\" />\r\n                </div>\r\n                <div>\r\n                    <label>Full Name</label>\r\n                    <input onChange={(e)=>setFullName(e.target.value)} defaultValue={user.fullName} type=\"text\" />\r\n                </div>\r\n                <div>\r\n                    <label>Email</label>\r\n                    <input onChange={(e)=>setEmail(e.target.value)} defaultValue={user.email} type=\"email\" />\r\n                </div>\r\n                <div  className=\"update-btn\"><button onClick={handleUpdateProfile} >Update</button></div>\r\n                {updateProfileLoading?<Spinner />:null}\r\n            </div>\r\n            <form className=\"change-password\" onSubmit={(e)=>handleChangePassword(e)} >\r\n                <span className=\"edit-profile-header\" >change password</span>\r\n                <div>\r\n                    <label>Current Password</label>\r\n                    <input onChange={(e)=>setCurrentPassword(e.target.value)} required={true} type=\"password\" />\r\n                </div>\r\n                <div>\r\n                    <label>New Password</label>\r\n                    <input onChange={(e)=>setNewPassword(e.target.value)} required={true} type=\"password\" />\r\n                </div>\r\n                <div>\r\n                    <label>Confirm Password</label>\r\n                    <input onChange={(e)=>setConfirmPassword(e.target.value)} required={true} type=\"password\" />\r\n                </div>\r\n                <div className=\"update-btn\"><button >Update</button></div>\r\n                {loading?<Spinner /> :null}\r\n            </form>\r\n            {error?<Status isOpen={true} message={error} />:null}\r\n        </div></>}\r\n    </>\r\n}\r\n\r\nexport default UpdateProfile\r\n",["229","230"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ProtectedRoute.js",["231","232"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\Profile.js",["233","234","235"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\SignScreen.js",["236","237","238","239"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\Main.js",["240","241","242"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowAssghnedTo.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\TaskMenu.js",[],["243","244"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\unSignedUser.js",[],["245","246"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Node.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Assigh.js",["247","248","249","250","251"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ClickToClose.js",["252"],"import React, { useEffect, useRef } from \"react\"\r\n\r\nconst useClickToClose = (closeHandler,x,) =>{\r\n  let node = useRef();\r\n  useEffect(() => {\r\n      let clickHandler\r\n    if(node.current){\r\n         clickHandler = (event) => {\r\n      if(!node.current.contains(event.target) && !x.current.contains(event.target) ){\r\n        closeHandler();\r\n      }else if (!node.current.contains(event.target) && !x.current.contains(event.target) ) {\r\n        closeHandler();\r\n      }\r\n    };\r\n\r\n    }\r\n   \r\n    document.addEventListener(\"mousedown\", clickHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", clickHandler);\r\n    };\r\n\r\n  });\r\n\r\n  return node;\r\n}\r\n\r\nexport  {useClickToClose};","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\GhuestScreen.js",["253","254","255","256"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\TaskCard.js",["257"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Bar.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowProjects.js",["258","259","260","261","262","263"],"import React, { useState } from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {useMutation} from '@apollo/client'\r\nimport {deleteProjectMutation,getProjectsQuery,addFavoritesMutation\r\n    ,deleteFavoritesMutation,leaveProjectMutation} from '../queries/projectQueries'\r\nimport {modifyDate} from '../helpers/helpers'\r\n\r\n\r\nconst ShowProjects = (props) => {\r\n    const {data,type,favorites} = props\r\n\r\n    const [page,setPage] = useState(1)\r\n    const limit = 10\r\n    const startIndex = (page -1 ) * limit\r\n    const endIndex = page * limit\r\n    const [delProject] = useMutation(deleteProjectMutation)\r\n    const [addFavorites] = useMutation(addFavoritesMutation)\r\n    const [delFavorites] = useMutation(deleteFavoritesMutation)\r\n    const [leaveProject] = useMutation(leaveProjectMutation)\r\n\r\n\r\n\r\n    const handleDeleteProject = (id) => {\r\n        delProject({\r\n            variables:{id},\r\n            refetchQueries:[{query:getProjectsQuery}]\r\n        })\r\n    }\r\n\r\n    const handleAddFavorites = (projectID) =>{\r\n        addFavorites({\r\n            variables:{\r\n                projectID\r\n            },\r\n            refetchQueries:[{query:getProjectsQuery}]\r\n        })\r\n    }\r\n\r\n    const handleRemoveFromFavorites = (id)=>{\r\n        delFavorites({\r\n          variables:{\r\n            projectID:id,\r\n          },\r\n          refetchQueries:[{query:getProjectsQuery}]\r\n        })\r\n    }\r\n\r\n    const handleLeaveProject = (id) => {\r\n        leaveProject({\r\n            variables:{\r\n                id\r\n            },\r\n            refetchQueries:[{query:getProjectsQuery}]\r\n        })\r\n    }\r\n    \r\n    let pagesnum = Math.ceil(data.length/limit)\r\n    let pages = [] \r\n    for (let i=1 ; i<= pagesnum ; i++){\r\n            pages.push(i)\r\n        }\r\n    \r\n        console.log(page)\r\n\r\n    return (\r\n        <div className=\"show-projects\">\r\n                    <ul>\r\n                        <li>\r\n                            <img src=\"./share.svg\"/>\r\n                            <img src=\"calendar.svg\"/>\r\n                            <img src=\"checklist.svg\"/>\r\n                            <img src=\"user.svg\"/>\r\n                            <span></span>\r\n                        </li>\r\n                        {data.slice(startIndex,endIndex).map(proj => \r\n                            <li  key={proj._id} >\r\n                                <div>\r\n                                    <Link to={`/project/${proj._id}`}>{proj.name}</Link>\r\n                                </div>\r\n                                <span>{modifyDate(proj.createdAt)}</span>\r\n                                <span>{`${proj.tasks.length} tasks`}</span>\r\n                                <span>{`${proj.group.length} members`}</span>\r\n                                <div>\r\n                                    {favorites.some(pr => pr._id == proj._id)?\r\n                                    <button onClick={()=>handleRemoveFromFavorites(proj._id)} ><i class=\"fas fa-star\"></i></button>\r\n                                    :<button onClick={()=>handleAddFavorites(proj._id)}><i class=\"far fa-star\"></i></button>}\r\n                                   {props.type === \"mine\" ? <button onClick={()=>handleDeleteProject(proj._id)}>\r\n                                       <i class=\"fas fa-trash-alt\"></i>\r\n                                    </button> :<button onClick={()=>handleLeaveProject(proj._id)} ><i class=\"fas fa-sign-out\"></i></button> }\r\n                                </div>\r\n                            </li>\r\n                            )}\r\n                    </ul>\r\n                    <div className=\"pagination-btns\">\r\n                        {pages.map(num => \r\n                            <button value={num} onClick={(e)=>setPage(e.target.value)} >{num}</button>    \r\n                        )}\r\n                    </div>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default ShowProjects\r\n",["264","265"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Filters.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\GroupSearch.js",["266"],"import React, { useEffect, useState } from 'react'\r\nimport {useMutation} from '@apollo/client'\r\nimport {assignTaskToUserMutation,getProjectDetailsQuery,deleteUserFromProjectMutation} from '../queries/projectQueries'\r\nimport {debounce} from '../helpers/helpers'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst GroupSearch = ({group, taskID, projectID,position,domNode,type}) => {\r\n    const [users,setUsers] = useState(group)\r\n    const [updateTask] = useMutation(assignTaskToUserMutation)\r\n    const [deleteUserFromProject] = useMutation(deleteUserFromProjectMutation)\r\n\r\n    const handleUpdateTask = (userID) => {\r\n         updateTask({\r\n            variables:{\r\n                taskID,\r\n                userID\r\n            },\r\n            refetchQueries:[{query:getProjectDetailsQuery,variables:{\r\n                id:projectID\r\n            }}]\r\n        })  \r\n    }\r\n\r\n    const handleSearchGroup = debounce((element)=>{\r\n        const keyword = element.value\r\n        if(keyword ===\"\"){\r\n            setUsers(group)\r\n        }\r\n        if(keyword){\r\n             const filteredUsers = group.filter(user => user.userName.includes(keyword))\r\n             setUsers(filteredUsers)\r\n         } \r\n        },100)\r\n\r\n    const handleDeleteUser = (userID)=>{\r\n        deleteUserFromProject({\r\n            variables:{\r\n                projectID,\r\n                userID\r\n            },\r\n            refetchQueries:[{query:getProjectDetailsQuery,variables:{\r\n                id:projectID\r\n            }}]\r\n        })\r\n\r\n        setUsers(users.filter(user => user._id != userID))\r\n    }\r\n    \r\n    useEffect(() => {\r\n        \r\n    }, [group,users])\r\n\r\n    return (\r\n        <div id=\"group-search\" className={`hide-v ${position}`} >\r\n            <div ref={domNode} className=\"group-search\">\r\n                <h3>Search Members</h3>\r\n                <input onChange={(e)=>handleSearchGroup(e.target)} type=\"text\" />\r\n                <ul>\r\n                    {type===\"show\"&&users?users.map(user => \r\n                        <li value={user._id}>\r\n                            <Link to={`/profile/${user._id}`}>{user.userName}</Link>\r\n                            <button onClick={()=>handleDeleteUser(user._id)}><i class=\"fas fa-trash-alt\"></i></button>\r\n                        </li>\r\n                    ):\r\n                    users&& users.map(user =>\r\n                        <li value={user._id} onClick={(e)=>handleUpdateTask(e.target.attributes.value.value)}>\r\n                            {user.userName}\r\n                        </li>\r\n                    )} \r\n                </ul>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GroupSearch\r\n",{"ruleId":"267","severity":1,"message":"268","line":4,"column":16,"nodeType":"269","messageId":"270","endLine":4,"endColumn":24},{"ruleId":"267","severity":1,"message":"271","line":15,"column":11,"nodeType":"269","messageId":"270","endLine":15,"endColumn":18},{"ruleId":"272","replacedBy":"273"},{"ruleId":"274","replacedBy":"275"},{"ruleId":"267","severity":1,"message":"276","line":1,"column":8,"nodeType":"269","messageId":"270","endLine":1,"endColumn":13},{"ruleId":"267","severity":1,"message":"277","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":26},{"ruleId":"267","severity":1,"message":"278","line":1,"column":28,"nodeType":"269","messageId":"270","endLine":1,"endColumn":36},{"ruleId":"272","replacedBy":"279"},{"ruleId":"274","replacedBy":"280"},{"ruleId":"267","severity":1,"message":"278","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":25},{"ruleId":"281","severity":1,"message":"282","line":22,"column":61,"nodeType":"283","messageId":"284","endLine":22,"endColumn":63},{"ruleId":"281","severity":1,"message":"282","line":28,"column":26,"nodeType":"283","messageId":"284","endLine":28,"endColumn":28},{"ruleId":"281","severity":1,"message":"282","line":28,"column":77,"nodeType":"283","messageId":"284","endLine":28,"endColumn":79},{"ruleId":"285","severity":1,"message":"286","line":125,"column":21,"nodeType":"287","endLine":125,"endColumn":96},{"ruleId":"272","replacedBy":"288"},{"ruleId":"274","replacedBy":"289"},{"ruleId":"267","severity":1,"message":"290","line":25,"column":11,"nodeType":"269","messageId":"270","endLine":25,"endColumn":18},{"ruleId":"281","severity":1,"message":"282","line":125,"column":47,"nodeType":"283","messageId":"284","endLine":125,"endColumn":49},{"ruleId":"281","severity":1,"message":"282","line":131,"column":44,"nodeType":"283","messageId":"284","endLine":131,"endColumn":46},{"ruleId":"281","severity":1,"message":"282","line":142,"column":92,"nodeType":"283","messageId":"284","endLine":142,"endColumn":94},{"ruleId":"281","severity":1,"message":"282","line":154,"column":92,"nodeType":"283","messageId":"284","endLine":154,"endColumn":94},{"ruleId":"281","severity":1,"message":"282","line":161,"column":51,"nodeType":"283","messageId":"284","endLine":161,"endColumn":53},{"ruleId":"267","severity":1,"message":"291","line":2,"column":36,"nodeType":"269","messageId":"270","endLine":2,"endColumn":44},{"ruleId":"267","severity":1,"message":"292","line":11,"column":26,"nodeType":"269","messageId":"270","endLine":11,"endColumn":33},{"ruleId":"281","severity":1,"message":"293","line":63,"column":60,"nodeType":"283","messageId":"284","endLine":63,"endColumn":62},{"ruleId":"267","severity":1,"message":"294","line":12,"column":8,"nodeType":"269","messageId":"270","endLine":12,"endColumn":22},{"ruleId":"281","severity":1,"message":"293","line":70,"column":70,"nodeType":"283","messageId":"284","endLine":70,"endColumn":72},{"ruleId":"281","severity":1,"message":"282","line":159,"column":71,"nodeType":"283","messageId":"284","endLine":159,"endColumn":73},{"ruleId":"281","severity":1,"message":"282","line":183,"column":28,"nodeType":"283","messageId":"284","endLine":183,"endColumn":30},{"ruleId":"272","replacedBy":"295"},{"ruleId":"274","replacedBy":"296"},{"ruleId":"267","severity":1,"message":"297","line":6,"column":47,"nodeType":"269","messageId":"270","endLine":6,"endColumn":57},{"ruleId":"267","severity":1,"message":"298","line":6,"column":59,"nodeType":"269","messageId":"270","endLine":6,"endColumn":70},{"ruleId":"299","severity":1,"message":"300","line":22,"column":16,"nodeType":"301","messageId":"302","endLine":22,"endColumn":35,"fix":"303"},{"ruleId":"304","severity":1,"message":"305","line":102,"column":8,"nodeType":"306","endLine":102,"endColumn":20,"suggestions":"307"},{"ruleId":"281","severity":1,"message":"282","line":153,"column":44,"nodeType":"283","messageId":"284","endLine":153,"endColumn":46},{"ruleId":"267","severity":1,"message":"271","line":6,"column":10,"nodeType":"269","messageId":"270","endLine":6,"endColumn":17},{"ruleId":"308","severity":1,"message":"309","line":39,"column":13,"nodeType":"310","endLine":39,"endColumn":95},{"ruleId":"272","replacedBy":"311"},{"ruleId":"274","replacedBy":"312"},{"ruleId":"267","severity":1,"message":"313","line":6,"column":11,"nodeType":"269","messageId":"270","endLine":6,"endColumn":23},{"ruleId":"304","severity":1,"message":"314","line":10,"column":8,"nodeType":"306","endLine":10,"endColumn":10,"suggestions":"315"},{"ruleId":"316","severity":1,"message":"317","line":19,"column":19,"nodeType":"318","messageId":"319","endLine":19,"endColumn":20},{"ruleId":"304","severity":1,"message":"320","line":21,"column":19,"nodeType":"321","endLine":21,"endColumn":51},{"ruleId":"304","severity":1,"message":"322","line":22,"column":19,"nodeType":"321","endLine":22,"endColumn":51},{"ruleId":"323","severity":1,"message":"324","line":47,"column":1,"nodeType":"325","messageId":"326","endLine":70,"endColumn":6},{"ruleId":"323","severity":1,"message":"324","line":73,"column":1,"nodeType":"325","messageId":"326","endLine":80,"endColumn":11},{"ruleId":"281","severity":1,"message":"293","line":24,"column":28,"nodeType":"283","messageId":"284","endLine":24,"endColumn":30},{"ruleId":"272","replacedBy":"327"},{"ruleId":"274","replacedBy":"328"},{"ruleId":"267","severity":1,"message":"277","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":26},{"ruleId":"267","severity":1,"message":"268","line":2,"column":16,"nodeType":"269","messageId":"270","endLine":2,"endColumn":24},{"ruleId":"281","severity":1,"message":"282","line":14,"column":32,"nodeType":"283","messageId":"284","endLine":14,"endColumn":34},{"ruleId":"267","severity":1,"message":"329","line":19,"column":23,"nodeType":"269","messageId":"270","endLine":19,"endColumn":36},{"ruleId":"308","severity":1,"message":"309","line":56,"column":17,"nodeType":"310","endLine":56,"endColumn":110},{"ruleId":"267","severity":1,"message":"277","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":26},{"ruleId":"267","severity":1,"message":"278","line":1,"column":28,"nodeType":"269","messageId":"270","endLine":1,"endColumn":36},{"ruleId":"267","severity":1,"message":"330","line":2,"column":26,"nodeType":"269","messageId":"270","endLine":2,"endColumn":36},{"ruleId":"308","severity":1,"message":"309","line":17,"column":17,"nodeType":"310","endLine":17,"endColumn":49},{"ruleId":"267","severity":1,"message":"277","line":1,"column":17,"nodeType":"269","messageId":"270","endLine":1,"endColumn":26},{"ruleId":"267","severity":1,"message":"331","line":12,"column":11,"nodeType":"269","messageId":"270","endLine":12,"endColumn":19},{"ruleId":"267","severity":1,"message":"271","line":13,"column":11,"nodeType":"269","messageId":"270","endLine":13,"endColumn":18},{"ruleId":"272","replacedBy":"332"},{"ruleId":"274","replacedBy":"333"},{"ruleId":"272","replacedBy":"334"},{"ruleId":"274","replacedBy":"335"},{"ruleId":"267","severity":1,"message":"336","line":2,"column":10,"nodeType":"269","messageId":"270","endLine":2,"endColumn":21},{"ruleId":"281","severity":1,"message":"282","line":27,"column":17,"nodeType":"283","messageId":"284","endLine":27,"endColumn":19},{"ruleId":"308","severity":1,"message":"309","line":29,"column":28,"nodeType":"310","endLine":29,"endColumn":128},{"ruleId":"281","severity":1,"message":"282","line":34,"column":46,"nodeType":"283","messageId":"284","endLine":34,"endColumn":48},{"ruleId":"308","severity":1,"message":"309","line":40,"column":29,"nodeType":"310","endLine":40,"endColumn":130},{"ruleId":"267","severity":1,"message":"276","line":1,"column":8,"nodeType":"269","messageId":"270","endLine":1,"endColumn":13},{"ruleId":"267","severity":1,"message":"278","line":1,"column":27,"nodeType":"269","messageId":"270","endLine":1,"endColumn":35},{"ruleId":"267","severity":1,"message":"268","line":4,"column":16,"nodeType":"269","messageId":"270","endLine":4,"endColumn":24},{"ruleId":"304","severity":1,"message":"337","line":32,"column":8,"nodeType":"306","endLine":32,"endColumn":18,"suggestions":"338"},{"ruleId":"308","severity":1,"message":"309","line":43,"column":17,"nodeType":"310","endLine":43,"endColumn":42},{"ruleId":"281","severity":1,"message":"282","line":36,"column":39,"nodeType":"283","messageId":"284","endLine":36,"endColumn":41},{"ruleId":"267","severity":1,"message":"339","line":10,"column":17,"nodeType":"269","messageId":"270","endLine":10,"endColumn":21},{"ruleId":"308","severity":1,"message":"309","line":69,"column":29,"nodeType":"310","endLine":69,"endColumn":53},{"ruleId":"308","severity":1,"message":"309","line":70,"column":29,"nodeType":"310","endLine":70,"endColumn":54},{"ruleId":"308","severity":1,"message":"309","line":71,"column":29,"nodeType":"310","endLine":71,"endColumn":55},{"ruleId":"308","severity":1,"message":"309","line":72,"column":29,"nodeType":"310","endLine":72,"endColumn":50},{"ruleId":"281","severity":1,"message":"282","line":84,"column":66,"nodeType":"283","messageId":"284","endLine":84,"endColumn":68},{"ruleId":"272","replacedBy":"340"},{"ruleId":"274","replacedBy":"341"},{"ruleId":"281","severity":1,"message":"293","line":47,"column":48,"nodeType":"283","messageId":"284","endLine":47,"endColumn":50},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","no-native-reassign",["342"],"no-negated-in-lhs",["343"],"'React' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.",["342"],["343"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["342"],["343"],"'domNode' is assigned a value but never used.","'useQuery' is defined but never used.","'loading' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'ShowAssghnedTo' is defined but never used.",["342"],["343"],"'removeDays' is defined but never used.","'getDuration' is defined but never used.","no-whitespace-before-property","Unexpected whitespace before property params.","MemberExpression","unexpectedWhitespace",{"range":"344","text":"345"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'project'. Either include it or remove the dependency array.","ArrayExpression",["346"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["342"],["343"],"'random_color' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'colors'. Either include it or remove the dependency array.",["347"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","Assignments to the 'box1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'box2' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",["342"],["343"],"'setIsUploaded' is assigned a value but never used.","'useHistory' is defined but never used.","'userInfo' is assigned a value but never used.",["342"],["343"],["342"],["343"],"'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["348"],"'type' is assigned a value but never used.",["342"],["343"],"no-global-assign","no-unsafe-negation",[773,775],".",{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},"Update the dependencies array to be: [data, project, props]",{"range":"355","text":"356"},"Update the dependencies array to be: [colors]",{"range":"357","text":"358"},"Update the dependencies array to be: [history, userInfo]",{"range":"359","text":"360"},[3238,3250],"[data, project, props]",[442,444],"[colors]",[967,977],"[history, userInfo]"]