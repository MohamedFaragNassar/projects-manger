[{"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\ProjectScreen.js":"1","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Timline.js":"2","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Bar.js":"3","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Relation.js":"4","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\Main.js":"5","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ProtectedRoute.js":"6","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowDependacy.js":"7","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\index.js":"8","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\SideMenu.js":"9","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\unSignedUser.js":"10","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Status.js":"11","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\CTC.js":"12","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\RegisterScreen.js":"13","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowProjects.js":"14","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AddTask.js":"15","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AddUsers.js":"16","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Board.js":"17","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Login.js":"18","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Assigh.js":"19"},{"size":7222,"mtime":1620974170429,"results":"20","hashOfConfig":"21"},{"size":3887,"mtime":1620997766583,"results":"22","hashOfConfig":"21"},{"size":1043,"mtime":1620997442063,"results":"23","hashOfConfig":"21"},{"size":3712,"mtime":1620997011938,"results":"24","hashOfConfig":"21"},{"size":3075,"mtime":1620974184565,"results":"25","hashOfConfig":"21"},{"size":563,"mtime":1620653774868,"results":"26","hashOfConfig":"21"},{"size":1031,"mtime":1615202698582,"results":"27","hashOfConfig":"21"},{"size":1321,"mtime":1619878920031,"results":"28","hashOfConfig":"21"},{"size":2711,"mtime":1619878920026,"results":"29","hashOfConfig":"21"},{"size":303,"mtime":1606993010514,"results":"30","hashOfConfig":"21"},{"size":442,"mtime":1619878920027,"results":"31","hashOfConfig":"21"},{"size":712,"mtime":1619878920030,"results":"32","hashOfConfig":"21"},{"size":3472,"mtime":1615202698596,"results":"33","hashOfConfig":"21"},{"size":3883,"mtime":1609321660655,"results":"34","hashOfConfig":"21"},{"size":7997,"mtime":1619878919972,"results":"35","hashOfConfig":"21"},{"size":4351,"mtime":1621861168029,"results":"36","hashOfConfig":"21"},{"size":6499,"mtime":1621861248121,"results":"37","hashOfConfig":"21"},{"size":2031,"mtime":1615202698577,"results":"38","hashOfConfig":"21"},{"size":2283,"mtime":1619878919973,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"42"},"1nxs219",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\ProjectScreen.js",["84","85","86","87","88"],"import React, { useEffect, useState } from 'react'\r\nimport Grid from '../components/Grid'\r\nimport Board from '../components/Board'\r\nimport Timline from '../components/Timline'\r\nimport {getProjectDetailsQuery} from '../queries/projectQueries'\r\nimport {useQuery} from '@apollo/client'\r\nimport AddUsers from '../components/AddUsers'\r\nimport GroupSearch from '../components/GroupSearch'\r\nimport {useClickToClose} from '../helpers/CTC'\r\nimport Filters from '../components/Filters'\r\nimport Status from '../components/Status'\r\nimport Spinner from '../components/Spinner'\r\n\r\n\r\n\r\n\r\nconst ProjectScreen = (props) => {\r\n    const userData = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null \r\n    let userID \r\n    if(userData){\r\n        userID = userData.id\r\n    }\r\n    const id = props.match .params.id;\r\n    \r\n    const [addUserOpen,setAddUserOpen] = useState(false)\r\n    const [view,setView] = useState(\"grid\")\r\n    const [tasks,setTasks] = useState([])\r\n    const [from,setFrom] = useState(0)\r\n    const [to,setTo] = useState(0)\r\n    const [zoom,setZoom] = useState(1)\r\n    const [filters,setFilters] = useState([])\r\n    const [boardfilter,setBoardFilter] = useState(\"bucket\")\r\n\r\n\r\n    const hideGroupSearch = ()=>{\r\n        const menu = document.getElementById(\"group-search\")\r\n        menu.classList.add(\"hide-v\")\r\n    }\r\n    const showGroupSearch = ()=>{\r\n        const menu = document.getElementById(\"group-search\")\r\n        menu.classList.remove(\"hide-v\")\r\n    }\r\n\r\n    const domNode = useClickToClose(hideGroupSearch,\".group-search\")\r\n\r\n    \r\n    const {loading,error,data} = useQuery(getProjectDetailsQuery,{\r\n        variables:{\r\n            id\r\n        }\r\n    })\r\n\r\n    let project\r\n    if(data){\r\n        project  = data.projectDetails\r\n    }\r\n\r\n    const showFilters = ()=>{\r\n        const filters = document.querySelector(\".filters-panel\")\r\n        filters.classList.remove(\"hide-v\")\r\n    }\r\n\r\n    const hideFilters = ()=>{\r\n        const filters = document.querySelector(\".filters-panel\")\r\n        filters.classList.add(\"hide-v\")\r\n    }\r\n\r\n    const filtersNode = useClickToClose(hideFilters,\".filters-panel\")\r\n\r\n    const filterByUser = (element) => {\r\n        setTasks( tasks.filter(task =>{return task.assignedTo.some(user => user._id === element.value)}))\r\n        setFilters([...filters,{filter:\"Group Member\",value:element.attributes.name.value}])\r\n    }\r\n    \r\n    const filterByBucket =(bucket) =>{\r\n        setTasks(tasks.filter(task => {return task.bucket === bucket}))\r\n        setFilters([...filters,{filter:\"Bucket\",value:bucket}])\r\n    }\r\n\r\n    const filterByCompletion = () =>{\r\n        setTasks(tasks.filter(task => {return task.completion >= from && task.completion <= to }))\r\n        setFilters([...filters,{filter:\"Completion\",value:`from : ${from} to : ${to}`}])\r\n    }\r\n\r\n    const filterByDuration = () => {\r\n        setTasks(tasks.filter(task => {return task.duration >= from && task.completion <= to }))\r\n        setFilters([...filters,{filter:\"Duration\",value:`from : ${from} to : ${to}`}])\r\n    }\r\n\r\n    const clearFilters = ()=>{\r\n        setTasks(project.tasks)\r\n        setFilters([])\r\n    }\r\n\r\n    \r\n    const x = window.screen.width\r\n   \r\n\r\n    useEffect(() => {\r\n       \r\n       if(project){\r\n           setTasks(project.tasks)\r\n       }\r\n    }, [data,props])\r\n    \r\n    return <>\r\n       { loading ? \r\n            <Spinner/>\r\n        : error ?\r\n            <Status isOpen={true} message={error.message} />\r\n       :data? \r\n       <div className=\"project-page\" >\r\n           <div className=\"proj-header\">\r\n                <div className=\"main-links\">\r\n                    <h1>{project.name}</h1>\r\n                    <div className=\"view-links\">\r\n                        <button onClick={()=>setView(\"grid\")} >Grid</button>\r\n                        <button onClick={()=>setView(\"board\")} >Board</button>\r\n                        <button className=\"timline-btn\" onClick={()=>setView(\"timline\")} >Timeline</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"manage\" >\r\n                    <div className=\"filter\" >\r\n                       {view === \"board\" ? \r\n                        <>\r\n                            <label>Group by </label>\r\n                            <select defaultValue={boardfilter} >\r\n                                <option onClickCapture={(e)=>setBoardFilter(e.target.value)}>bucket</option>\r\n                                <option  onClickCapture={(e)=>setBoardFilter(e.target.value)} >progresion</option>\r\n                            </select>\r\n                        </> \r\n                        : view===\"grid\"?\r\n                        <>\r\n                            <div className=\"filters\" >\r\n                                <button onClick={()=>showFilters()}>\r\n                                    ({filters.length}) filters\r\n                                    <i class=\"fas fa-filter\"></i>\r\n                                    </button>\r\n                                <Filters project={project} filterByCompletion={filterByCompletion} filterByUser={filterByUser} \r\n                                    filterByBucket={filterByBucket} filterByDuration={filterByDuration} domNode={filtersNode}\r\n                                     clearFilters={clearFilters} filters={filters} setFrom={setFrom} setTo={setTo} />\r\n                            </div>\r\n                        </> : <>\r\n                            {/* <label>zoom</label>\r\n                            <input type=\"range\" min=\".5\" max=\"1.5\" defaultValue=\"1\" step=\".1\" onChange={(e=>setZoom(e.target.value))} /> */}\r\n                        </>}\r\n                    </div>\r\n                    <div className=\"users\">\r\n                        <div className=\"group-members\" >\r\n                            <button onClick={()=> showGroupSearch()} className=\"group-members-btn\" >Group mempers ({project.group.length}) \r\n                                <i class=\"fas fa-chevron-down\"></i>\r\n                            </button>\r\n                            \r\n                        </div>\r\n                        {project.owner._id == userID?<button onClick={()=>setAddUserOpen(true)} className=\"group\" >\r\n                            Add Members<i class=\"fas fa-user-plus\"></i>\r\n                        </button>:null}\r\n                        \r\n                        <GroupSearch  group={project.group} projectID={project._id} type=\"show\"\r\n                         domNode={domNode} position={\"group-search-container\"} />\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"proj-body\" >\r\n                {view===\"grid\"?\r\n                    <Grid  tasks={tasks} project={project}/>:view===\"board\"?\r\n                    <Board filter={boardfilter} project={project}/>: window.screen.width > 800 ?\r\n                    <Timline project={project} zoom={zoom}/> : null\r\n                }\r\n            </div>\r\n        </div>:null}\r\n\r\n        <AddUsers isOpen={addUserOpen} close={()=>setAddUserOpen(false)} project={project} />\r\n        <svg className=\"draw\" ></svg>\r\n   </>\r\n}\r\n\r\nexport default ProjectScreen\r\n","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Timline.js",["89","90"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Bar.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Relation.js",["91","92","93","94","95","96","97"],"import React, { useEffect, useState } from 'react'\r\n\r\nconst Relation = ({id1,id2,left,index}) => {\r\n\r\n    const colors = ['#16c79a', '#19456b', '#11698e','#e7d9ea', '#583d72', '#fa9579','#fdb827', '#bedbbb', '#839b97'];\r\n    const random_color = colors[Math.floor(Math.random() * colors.length)];\r\n    const [random,setRandome] = useState()\r\n    useEffect(() => {\r\n       setRandome(colors[Math.floor(Math.random() * colors.length)])\r\n    }, [])\r\n    const [x1,setX1] = useState()\r\n    const [y1,sety1] = useState()\r\n   \r\n    let box1 , box2 \r\n    \r\n    useEffect(() => {\r\n        const element1 = document.getElementById(id1)\r\n        const element2 = document.getElementById(id2)\r\n       if(element1,element2){\r\n\r\n           box1 = element1.getBoundingClientRect()\r\n           box2 = element2.getBoundingClientRect()\r\n           sety1(box2.y-box1.y)\r\n           setX1(box2.x-(box1.x+box1.width))\r\n       \r\n       }\r\n        \r\n    }, [x1,index])\r\n    \r\n        \r\n   \r\n    return <>\r\n        {y1 > 0 ?\r\n        <svg className=\"draw\" style={{left:left+\"px\"}} >\r\n            <polyline points={`0,0 0,${y1} ${x1+left},${y1}`} fill=\"none\" strokeWidth=\"4\" stroke={random} />\r\n        </svg>\r\n        :\r\n        <svg className=\"drawv2\" style={{left:left+\"px\"}} >\r\n            <polyline points={`0,600 25,600 25,${600+y1} ${x1},${600+y1}`} fill=\"none\" strokeWidth=\"4\" stroke={random} />\r\n        </svg>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Relation\r\n\r\n{/* <div className=\"timeline\">\r\n            <div className=\"changing-date\">{cdate ? cdate:null}</div>\r\n            <div className=\"timeline-side\" ></div>\r\n            <div className=\"timeline-main\">\r\n                {project.tasks.map(task => {\r\n                    const days = getDeffrenceInDays(task.end,task.start)\r\n                    const daysBeforStart =getDeffrenceInDays(task.start,modifyDate(project.createdAt))\r\n                   \r\n                  return ( <div className=\"timline-task\"  >\r\n                       <Bar length={days} befor={daysBeforStart} task={task} handleEditEndDate={handleEditEndDate} \r\n                        handleEditStartDate={handleEditStartDate} /> \r\n                        <div className=\"row-grid\">\r\n                            {grid.map(x => \r\n                                <Node index = {x+1} setIndex={setIndex} />    \r\n                            )}\r\n                        </div>\r\n                   </div>) \r\n                }\r\n                )}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n} */}\r\n\r\n\r\n{/* <svg  width=\"62\" height=\"600\" pointer-events=\"none\" position=\"absolute\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n\r\n<path d=\"M 0 0 L 25 0 A 3 3 0 0,1 28 3 L 28 250  A 3 3 0 0,0 31 253 L 56 253 \" transform=\"translate(3,3)\" pointer-events=\"visibleStroke\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"rgb(132, 172, 179)\"  stroke-width=\"4\"></path>\r\n\r\n</svg>\r\n<svg  width=\"62\" height=\"600\" pointer-events=\"none\" position=\"absolute\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n    <path d=\"M 50 0 L 25 0 A 3 3 0 0,0 24 3 L 25 250  A 3 3 0 0,1 24 253 L 0 253 \" transform=\"translate(3,3)\" pointer-events=\"visibleStroke\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"rgb(132, 172, 179)\" stroke-width=\"5\"></path>\r\n</svg> */}\r\n\r\n/* \r\n<path d={`M ${box1.x} ${box1.y} L ${box1.x+25} ${box1.y} A 3 3 0 0,1 ${box1.x+28} ${box1.y+3} L ${box1.x+28} ${box1.y+250}  A 3 3 0 0,0 ${box1.x+31} ${box1.y+253} L ${box1.x+56} ${box1.y+253} `}\r\n             transform=\"translate(3,3)\" pointer-events=\"visibleStroke\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \r\n             fill=\"none\" stroke=\"rgb(132, 172, 179)\"   stroke-width=\"4\"></path> */","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\Main.js",["98","99","100"],"import React, { useEffect, useState } from 'react'\r\nimport NewProject from '../components/NewProject'\r\nimport ProjectCard from '../components/ProjectCard'\r\nimport {useQuery} from '@apollo/client'\r\nimport {getProjectsQuery} from '../queries/projectQueries'\r\nimport ShowProjects from '../components/ShowProjects'\r\nimport {useClickToClose} from '../helpers/CTC'\r\nimport Status from '../components/Status'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Spinner from '../components/Spinner'\r\n\r\nconst Main = () => {\r\n    const userInfo =localStorage.getItem(\"userInfo\")\r\n    const history = useHistory()\r\n\r\n    const [isOpen,setIsOpen] = useState(false)\r\n    const [projectstype,setProjectsType] = useState(\"mine\")\r\n    \r\n    const {data,loading,error} = useQuery(getProjectsQuery)\r\n\r\n    const hideMenu = ()=>{\r\n        const menu = document.querySelector(\".project-menu:not(.hide)\")\r\n        if(menu){\r\n            menu.classList.add(\"hide\")\r\n        }\r\n    }\r\n    console.log(\"mainnnnnnnnnn\")\r\n \r\n    const domNode = useClickToClose(hideMenu,\".project-menu:not(.hide)\")\r\n\r\n    const changeProjectshandler = (type)=>{\r\n        const myBtn = document.getElementById(\"my-projects\")\r\n        const sharedBtn = document.getElementById(\"shared-projects\")\r\n        setProjectsType(type)\r\n        if(type===\"mine\"){\r\n            myBtn.classList.add(\"show-btn\")\r\n            sharedBtn.classList.remove(\"show-btn\")\r\n        }else{\r\n            myBtn.classList.remove(\"show-btn\")\r\n            sharedBtn.classList.add(\"show-btn\")\r\n\r\n        }\r\n    }\r\n\r\n    \r\n    if(loading){\r\n        return <Spinner/>\r\n    }\r\n    if(error){\r\n        return <Status isOpen={true} message={error.message} />\r\n    }\r\n    return <>\r\n        <div className=\"main-page\">\r\n           <div className=\"add-new-project\" >\r\n                <button onClick={()=>setIsOpen(true)}><i class=\"fas fa-plus\"></i>Add new project</button>\r\n            </div>\r\n           {data&&data.projects.favorites.length>0 ? <div className=\"favorites\">\r\n                <div className=\"fav-header\" >Favorites</div>\r\n                <div ref={domNode} className=\"fav-body\" >\r\n                    {data.projects.favorites.map(project => \r\n                        <ProjectCard  project={project} close={()=>hideMenu} />\r\n                    )}\r\n                </div>\r\n            </div>: null}\r\n            <div className=\"my-project\" >\r\n                <div className=\"my-projects-btns\">\r\n                    <button className=\"show-btn\" id=\"my-projects\" onClick={()=>changeProjectshandler(\"mine\")} >Created by me </button>\r\n                    <button id=\"shared-projects\"  onClick={()=>changeProjectshandler(\"shared\")} >Shared with me </button>\r\n                </div>\r\n                <ShowProjects data = { data ? projectstype ===\"mine\" ? data.projects.myProjects : data.projects.sharedProjects : []}\r\n                 type={projectstype} favorites={data.projects.favorites}  />\r\n            </div>\r\n        </div>\r\n        <NewProject isOpen={isOpen} close={()=>setIsOpen(false)} />\r\n    </>\r\n    \r\n}\r\n\r\nexport default Main\r\n",["101","102"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ProtectedRoute.js",["103","104"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowDependacy.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\index.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\SideMenu.js",[],["105","106"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\unSignedUser.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Status.js",["107","108"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\CTC.js",["109"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowProjects.js",["110","111","112","113","114","115"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AddTask.js",["116","117","118","119","120"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AddUsers.js",["121","122","123"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Board.js",["124","125","126","127","128","129"],"import React, {useState } from 'react'\r\nimport TaskCard from './TaskCard'\r\nimport {useMutation} from '@apollo/client'\r\nimport {addBucketMutation,addTaskToBucketMutation\r\n        ,getProjectDetailsQuery,deleteBucketmutation} from '../queries/projectQueries'\r\nimport {getDragAfterElement} from '../helpers/dragAndDrop'\r\nimport {useClickToClose} from '../helpers/CTC'\r\n\r\nconst Board = (props) => {\r\n    const project = props.project;\r\n    const filter = props.filter\r\n    const userData = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null \r\n    let userID \r\n    if(userData){\r\n        userID = userData.id\r\n    }\r\n    \r\n    const [bucket,setBucket] = useState()\r\n    const [showForm,setShowForm] = useState(false)\r\n\r\n    const [addBucket] = useMutation(addBucketMutation)\r\n    const [addTaskToBucket] = useMutation(addTaskToBucketMutation)\r\n    const [deleteBucket] = useMutation(deleteBucketmutation)\r\n\r\n    const domNode = useClickToClose()\r\n   \r\n   \r\n    const handleAddBucket = (e)=>{\r\n        e.preventDefault()\r\n        addBucket({variables:{\r\n            id:project._id,\r\n            bucket\r\n        },\r\n        refetchQueries:[{query:getProjectDetailsQuery,variables:{\r\n            id:project._id\r\n        }}]\r\n    })\r\n        const bucketInput = document.querySelector(\"#bucket-input\")\r\n        bucketInput.value = null\r\n        bucketInput.classList.add(\"hide\")\r\n    }\r\n\r\n    const showInput = () =>{\r\n       setShowForm(true)\r\n        \r\n    }\r\n\r\n    const bucketNode = useClickToClose(()=>setShowForm(false),\"#add-bucket-form\")\r\n\r\n    const showSelect = (e)=>{\r\n        const selectTask = e.target.previousElementSibling\r\n        selectTask.classList.remove(\"hide\")\r\n        e.target.classList.add(\"hide\")\r\n    }\r\n\r\n    const handleAddTaskToBucket = (e)=>{\r\n        const taskID = e.target.value\r\n        const bucket = e.target.attributes.bucket.value\r\n        const select = e.target.parentElement\r\n        const btn = select.nextElementSibling\r\n        addTaskToBucket({variables:{\r\n            projectID:project._id,\r\n            taskID,\r\n            bucket\r\n        },\r\n        refetchQueries:[{query:getProjectDetailsQuery,variables:{\r\n            id:project._id\r\n        }}]\r\n    })\r\n\r\n        select.classList.add(\"hide\")\r\n        btn.classList.remove(\"hide\")\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    const handledragOver = (e,bucket)=>{\r\n        const container = document.getElementById(bucket)\r\n        e.preventDefault()\r\n        const afterElement = getDragAfterElement(container, e.clientY)\r\n        const draggingElemnet = document.querySelector('.dragging')\r\n        const taskID = draggingElemnet.attributes.taskID.value\r\n        \r\n        draggingElemnet.addEventListener(\"dragend\",()=>{\r\n            if(!afterElement){\r\n                container.appendChild(draggingElemnet)\r\n            }else{\r\n                container.insertBefore(draggingElemnet,afterElement)\r\n            }\r\n             addTaskToBucket({variables:{\r\n                    projectID:project._id,\r\n                    taskID,\r\n                    bucket\r\n                },\r\n                \r\n            }) \r\n            draggingElemnet.classList.remove(\"dragging\")\r\n        })\r\n    }\r\n\r\n    \r\n    const handleDeleteBucket = (bucket)=>{\r\n       deleteBucket({\r\n           variables:{\r\n               id:project._id,\r\n               bucket\r\n           },\r\n           refetchQueries:[{query:getProjectDetailsQuery,variables:{id:project._id}}]\r\n       })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"board\" >\r\n            <div className=\"board-body\">\r\n                { filter===\"bucket\" && project ? \r\n                    project.buckets.map(bucket => \r\n                    <div id={bucket}  bucket={bucket}  onDragOver={(e)=>handledragOver(e,bucket)}\r\n                     className=\"board-bucket drag-container drg\" >\r\n                        <h4>\r\n                            {bucket} \r\n                            {project.owner._id==userID?<i onClick={(e)=>handleDeleteBucket(bucket)}\r\n                             className=\"fal fa-times-circle \"></i>:null} \r\n                        </h4>\r\n                        <select id=\"board-select\"  className=\"hide\" >{project.tasks.map(task => \r\n                            <option  bucket={bucket} value={task._id} onClick={(e)=>handleAddTaskToBucket(e)} >{task.name}</option>    \r\n                        )}</select>\r\n                        {project.owner._id == userID ?<button id=\"add-task-to-bucket\" bucket={bucket} onClick={(e)=>showSelect(e)}>\r\n                            add task\r\n                        </button> :null}\r\n                        {project.tasks.filter(task => task.bucket === bucket).map(task => \r\n                            <TaskCard task = {task} project={project} />\r\n                            )}\r\n                    </div>)\r\n                    :\r\n                    <>\r\n                        <div>\r\n                            <h4>Not Started</h4>\r\n                            {project&&project.tasks.filter(task => {return task.completion ==0 }).map(task => \r\n                                <TaskCard task={task} project={project}  />\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <h4>In progress</h4>\r\n                            {project&&project.tasks.filter(task => {return task.completion > 0 && task.completion < 100  }).map(task => \r\n                                <TaskCard task={task} project={project}  />\r\n                            )}\r\n                        </div>\r\n                        <div>\r\n                            <h4>Finished</h4>\r\n                            {project&&project.tasks.filter(task => {return task.completion == 100 }).map(task => \r\n                                <TaskCard task={task} project={project}  />\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                }\r\n            </div>\r\n           {filter===\"bucket\" && project.owner._id==userID ?\r\n                <form ref={bucketNode} id=\"add-bucket-form\" onSubmit={showForm?(e)=>handleAddBucket(e):()=>showInput()} className=\"add-new-bucket\">\r\n                    {showForm&&<input  id=\"bucket-input\" required={true} type=\"text\" onChange={(e)=>setBucket(e.target.value)} />}\r\n                    <button onClick={(e)=>showInput(e)}>+ New Bucket</button>\r\n                </form>\r\n            :null}\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Login.js",["130","131"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Assigh.js",["132","133","134","135","136"],{"ruleId":"137","severity":1,"message":"138","line":23,"column":16,"nodeType":"139","messageId":"140","endLine":23,"endColumn":35,"fix":"141"},{"ruleId":"142","severity":1,"message":"143","line":30,"column":17,"nodeType":"144","messageId":"145","endLine":30,"endColumn":24},{"ruleId":"142","severity":1,"message":"146","line":96,"column":11,"nodeType":"144","messageId":"145","endLine":96,"endColumn":12},{"ruleId":"147","severity":1,"message":"148","line":104,"column":8,"nodeType":"149","endLine":104,"endColumn":20,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":155,"column":44,"nodeType":"153","messageId":"154","endLine":155,"endColumn":46},{"ruleId":"142","severity":1,"message":"155","line":6,"column":47,"nodeType":"144","messageId":"145","endLine":6,"endColumn":57},{"ruleId":"142","severity":1,"message":"156","line":6,"column":59,"nodeType":"144","messageId":"145","endLine":6,"endColumn":70},{"ruleId":"142","severity":1,"message":"157","line":6,"column":11,"nodeType":"144","messageId":"145","endLine":6,"endColumn":23},{"ruleId":"147","severity":1,"message":"158","line":10,"column":8,"nodeType":"149","endLine":10,"endColumn":10,"suggestions":"159"},{"ruleId":"160","severity":1,"message":"161","line":19,"column":19,"nodeType":"162","messageId":"163","endLine":19,"endColumn":20},{"ruleId":"147","severity":1,"message":"164","line":21,"column":19,"nodeType":"165","endLine":21,"endColumn":51},{"ruleId":"147","severity":1,"message":"166","line":22,"column":19,"nodeType":"165","endLine":22,"endColumn":51},{"ruleId":"167","severity":1,"message":"168","line":47,"column":1,"nodeType":"169","messageId":"170","endLine":70,"endColumn":6},{"ruleId":"167","severity":1,"message":"168","line":73,"column":1,"nodeType":"169","messageId":"170","endLine":80,"endColumn":11},{"ruleId":"142","severity":1,"message":"171","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"172","line":13,"column":11,"nodeType":"144","messageId":"145","endLine":13,"endColumn":19},{"ruleId":"142","severity":1,"message":"173","line":14,"column":11,"nodeType":"144","messageId":"145","endLine":14,"endColumn":18},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"142","severity":1,"message":"171","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"178","line":2,"column":16,"nodeType":"144","messageId":"145","endLine":2,"endColumn":24},{"ruleId":"174","replacedBy":"179"},{"ruleId":"176","replacedBy":"180"},{"ruleId":"142","severity":1,"message":"171","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":26},{"ruleId":"142","severity":1,"message":"181","line":1,"column":28,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"182","line":1,"column":8,"nodeType":"144","messageId":"145","endLine":1,"endColumn":13},{"ruleId":"142","severity":1,"message":"183","line":10,"column":17,"nodeType":"144","messageId":"145","endLine":10,"endColumn":21},{"ruleId":"184","severity":1,"message":"185","line":69,"column":29,"nodeType":"186","endLine":69,"endColumn":53},{"ruleId":"184","severity":1,"message":"185","line":70,"column":29,"nodeType":"186","endLine":70,"endColumn":54},{"ruleId":"184","severity":1,"message":"185","line":71,"column":29,"nodeType":"186","endLine":71,"endColumn":55},{"ruleId":"184","severity":1,"message":"185","line":72,"column":29,"nodeType":"186","endLine":72,"endColumn":50},{"ruleId":"151","severity":1,"message":"152","line":84,"column":66,"nodeType":"153","messageId":"154","endLine":84,"endColumn":68},{"ruleId":"142","severity":1,"message":"181","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"151","severity":1,"message":"152","line":22,"column":61,"nodeType":"153","messageId":"154","endLine":22,"endColumn":63},{"ruleId":"151","severity":1,"message":"152","line":28,"column":26,"nodeType":"153","messageId":"154","endLine":28,"endColumn":28},{"ruleId":"151","severity":1,"message":"152","line":28,"column":77,"nodeType":"153","messageId":"154","endLine":28,"endColumn":79},{"ruleId":"187","severity":1,"message":"188","line":125,"column":21,"nodeType":"189","endLine":125,"endColumn":96},{"ruleId":"142","severity":1,"message":"190","line":2,"column":36,"nodeType":"144","messageId":"145","endLine":2,"endColumn":44},{"ruleId":"142","severity":1,"message":"191","line":11,"column":26,"nodeType":"144","messageId":"145","endLine":11,"endColumn":33},{"ruleId":"151","severity":1,"message":"192","line":63,"column":60,"nodeType":"153","messageId":"154","endLine":63,"endColumn":62},{"ruleId":"142","severity":1,"message":"193","line":25,"column":11,"nodeType":"144","messageId":"145","endLine":25,"endColumn":18},{"ruleId":"151","severity":1,"message":"152","line":125,"column":47,"nodeType":"153","messageId":"154","endLine":125,"endColumn":49},{"ruleId":"151","severity":1,"message":"152","line":131,"column":44,"nodeType":"153","messageId":"154","endLine":131,"endColumn":46},{"ruleId":"151","severity":1,"message":"152","line":142,"column":92,"nodeType":"153","messageId":"154","endLine":142,"endColumn":94},{"ruleId":"151","severity":1,"message":"152","line":154,"column":92,"nodeType":"153","messageId":"154","endLine":154,"endColumn":94},{"ruleId":"151","severity":1,"message":"152","line":161,"column":51,"nodeType":"153","messageId":"154","endLine":161,"endColumn":53},{"ruleId":"142","severity":1,"message":"178","line":4,"column":16,"nodeType":"144","messageId":"145","endLine":4,"endColumn":24},{"ruleId":"142","severity":1,"message":"173","line":15,"column":11,"nodeType":"144","messageId":"145","endLine":15,"endColumn":18},{"ruleId":"142","severity":1,"message":"194","line":2,"column":10,"nodeType":"144","messageId":"145","endLine":2,"endColumn":21},{"ruleId":"151","severity":1,"message":"152","line":27,"column":17,"nodeType":"153","messageId":"154","endLine":27,"endColumn":19},{"ruleId":"184","severity":1,"message":"185","line":29,"column":28,"nodeType":"186","endLine":29,"endColumn":128},{"ruleId":"151","severity":1,"message":"152","line":34,"column":46,"nodeType":"153","messageId":"154","endLine":34,"endColumn":48},{"ruleId":"184","severity":1,"message":"185","line":40,"column":29,"nodeType":"186","endLine":40,"endColumn":130},"no-whitespace-before-property","Unexpected whitespace before property params.","MemberExpression","unexpectedWhitespace",{"range":"195","text":"196"},"no-unused-vars","'setZoom' is assigned a value but never used.","Identifier","unusedVar","'x' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'project'. Either include it or remove the dependency array.","ArrayExpression",["197"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'removeDays' is defined but never used.","'getDuration' is defined but never used.","'random_color' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'colors'. Either include it or remove the dependency array.",["198"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","Assignments to the 'box1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'box2' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useEffect' is defined but never used.","'userInfo' is assigned a value but never used.","'history' is assigned a value but never used.","no-native-reassign",["199"],"no-negated-in-lhs",["200"],"'Redirect' is defined but never used.",["199"],["200"],"'useState' is defined but never used.","'React' is defined but never used.","'type' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'useQuery' is defined but never used.","'loading' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'domNode' is assigned a value but never used.","'useSelector' is defined but never used.",[818,820],".",{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [data, project, props]",{"range":"205","text":"206"},"Update the dependencies array to be: [colors]",{"range":"207","text":"208"},[3321,3333],"[data, project, props]",[442,444],"[colors]"]