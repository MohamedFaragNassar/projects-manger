[{"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\App.js":"1","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Login.js":"2","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\CTC.js":"3","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\helpers.js":"4","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Status.js":"5","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AddTask.js":"6","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Board.js":"7","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AddUsers.js":"8","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Grid.js":"9","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\SideMenu.js":"10","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Timline.js":"11","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Spinner.js":"12","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ProjectCard.js":"13","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AdditionalColumns.js":"14","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\ProjectScreen.js":"15","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\SignedUser.js":"16","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\RegisterScreen.js":"17","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowDependacy.js":"18","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\index.js":"19","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\queries\\projectQueries.js":"20","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\queries\\userQueries.js":"21","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\dragAndDrop.js":"22","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Relation.js":"23","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\UnRegisteredRoute.js":"24","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\UpdateProfile.js":"25","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ProtectedRoute.js":"26","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\Profile.js":"27","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\SignScreen.js":"28","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\Main.js":"29","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowAssghnedTo.js":"30","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\TaskMenu.js":"31","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\unSignedUser.js":"32","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Node.js":"33","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Assigh.js":"34","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ClickToClose.js":"35","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\GhuestScreen.js":"36","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\TaskCard.js":"37","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Bar.js":"38","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowProjects.js":"39"},{"size":2226,"mtime":1614920690819,"results":"40","hashOfConfig":"41"},{"size":2031,"mtime":1610707953008,"results":"42","hashOfConfig":"41"},{"size":731,"mtime":1610019557270,"results":"43","hashOfConfig":"41"},{"size":1934,"mtime":1614922022472,"results":"44","hashOfConfig":"41"},{"size":354,"mtime":1609138133008,"results":"45","hashOfConfig":"41"},{"size":7985,"mtime":1614924938385,"results":"46","hashOfConfig":"41"},{"size":6576,"mtime":1614714448336,"results":"47","hashOfConfig":"41"},{"size":4351,"mtime":1612031928195,"results":"48","hashOfConfig":"41"},{"size":8250,"mtime":1614924129546,"results":"49","hashOfConfig":"41"},{"size":2682,"mtime":1609319284457,"results":"50","hashOfConfig":"41"},{"size":2870,"mtime":1610697432205,"results":"51","hashOfConfig":"41"},{"size":143,"mtime":1610000834484,"results":"52","hashOfConfig":"41"},{"size":1991,"mtime":1615059431132,"results":"53","hashOfConfig":"41"},{"size":2067,"mtime":1614921409000,"results":"54","hashOfConfig":"41"},{"size":7048,"mtime":1614920762979,"results":"55","hashOfConfig":"41"},{"size":1729,"mtime":1614863167315,"results":"56","hashOfConfig":"41"},{"size":3472,"mtime":1610001247467,"results":"57","hashOfConfig":"41"},{"size":1031,"mtime":1614542625122,"results":"58","hashOfConfig":"41"},{"size":1318,"mtime":1610121466598,"results":"59","hashOfConfig":"41"},{"size":6418,"mtime":1614923718066,"results":"60","hashOfConfig":"41"},{"size":682,"mtime":1609138481650,"results":"61","hashOfConfig":"41"},{"size":526,"mtime":1608212760673,"results":"62","hashOfConfig":"41"},{"size":3641,"mtime":1609072238584,"results":"63","hashOfConfig":"41"},{"size":588,"mtime":1614543040994,"results":"64","hashOfConfig":"41"},{"size":4327,"mtime":1610719728373,"results":"65","hashOfConfig":"41"},{"size":591,"mtime":1614543034344,"results":"66","hashOfConfig":"41"},{"size":3709,"mtime":1614920634949,"results":"67","hashOfConfig":"41"},{"size":723,"mtime":1609144675680,"results":"68","hashOfConfig":"41"},{"size":3004,"mtime":1614712891126,"results":"69","hashOfConfig":"41"},{"size":344,"mtime":1612033599895,"results":"70","hashOfConfig":"41"},{"size":1389,"mtime":1609425375915,"results":"71","hashOfConfig":"41"},{"size":303,"mtime":1606993010514,"results":"72","hashOfConfig":"41"},{"size":238,"mtime":1608965070528,"results":"73","hashOfConfig":"41"},{"size":2134,"mtime":1614927351016,"results":"74","hashOfConfig":"41"},{"size":703,"mtime":1606898091033,"results":"75","hashOfConfig":"41"},{"size":1550,"mtime":1615200453687,"results":"76","hashOfConfig":"41"},{"size":2363,"mtime":1615059827598,"results":"77","hashOfConfig":"41"},{"size":974,"mtime":1609999465841,"results":"78","hashOfConfig":"41"},{"size":3883,"mtime":1609321660655,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"1czucod",{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"87"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"104"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"87"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"120","usedDeprecatedRules":"87"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"83"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"96"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"96"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"87"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"87"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"87"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"87"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\App.js",["178"],"import { useState } from 'react';\nimport {BrowserRouter, Link, Route} from 'react-router-dom'\nimport './App.css';\nimport SideMenu from './components/SideMenu'\nimport Main from './screens/Main'\nimport ProjectScreen from './screens/ProjectScreen'\nimport SignedUser from './components/SignedUser'\nimport UnSignedUser from './components/unSignedUser'\nimport ProtectedRoute from './components/ProtectedRoute'\nimport UnRegisteredRoute from './components/UnRegisteredRoute'\nimport SignScreen from './screens/SignScreen';\nimport Profile from './screens/Profile';\n\nfunction App() {\n\nconst userData =localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):null\nconst [isOpen,setIsOpen] = useState(false)\n\n const sideMenuHandler = ()=>{\n   const main = document.getElementById(\"main\")\n   main.classList.toggle(\"main-v2\")\n   setIsOpen(!isOpen)\n } \n\n  return   <BrowserRouter >\n    <div className=\"container\" >\n    <header className=\"navigation\">\n          <Link to=\"/\" className=\"logo\" >Project Manger</Link>\n          <div className=\"user\">\n            {userData ? <SignedUser/> :<UnSignedUser/> }\n            \n          </div>\n      </header>\n      <div  id=\"main\"  className=\"main\">\n              {userData?<div className=\"sidebar\">\n                    <div className=\"side-nav\">\n                      <button onClick={()=>sideMenuHandler()} ><i class=\"far fa-bars\"></i></button>\n                      <button><i class=\"far fa-home-lg-alt\"></i></button>\n                    </div>\n                    <SideMenu isOpen={isOpen} />\n              </div>:<div></div>}\n              <div className=\"main-section\">\n                  <UnRegisteredRoute path=\"/ghuest\" component={SignScreen} />\n                  <UnRegisteredRoute path=\"/signin\"  component={SignScreen} />\n                  <UnRegisteredRoute path=\"/signup\"  component={SignScreen} />\n                  <ProtectedRoute path=\"/project/:id\"  component={ProjectScreen} />\n                  <ProtectedRoute path=\"/profile/:id\"  component={Profile} />\n                  <ProtectedRoute path=\"/\"  exact={true} component={Main} />\n               \n                \n              </div>\n      </div>\n      \n    </div>\n    </BrowserRouter>\n}\n\nexport default App;\n",["179","180"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Login.js",["181","182"],"import React, {useEffect, useState } from 'react'\r\nimport {useMutation} from '@apollo/client'\r\nimport {loginQuery} from '../queries/userQueries'\r\nimport { Link, Redirect, useHistory } from 'react-router-dom'\r\nimport Status from '../components/Status'\r\nimport Spinner from '../components/Spinner'\r\n\r\nconst Login = () => {\r\n    const [email,setEmail] = useState()\r\n    const [password,setPassword] = useState()\r\n    const [error,setError] = useState()\r\n    const [data,setData] = useState()\r\n\r\n    const [logUserIn, {loading}] = useMutation(loginQuery)\r\n    const history = useHistory();\r\n\r\n    \r\n    const handlSignin = async(e) =>{\r\n        e.preventDefault()\r\n        try{\r\n           const {data} = await logUserIn({\r\n                variables:{\r\n                    email,\r\n                    password\r\n                }\r\n            })\r\n            if(data){\r\n                localStorage.setItem(\"userInfo\",JSON.stringify(data.login))\r\n                setData(data)\r\n            }\r\n        }catch(error){\r\n            setError(error)\r\n        }\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(data){\r\n            window.location.href = \"/\"\r\n        }\r\n    },[data])\r\n    \r\n    return <>\r\n        <form onSubmit={(e)=>handlSignin(e)} className=\"login-form\">\r\n                <h3>Welcome</h3>\r\n                <div>\r\n                    <label>Email </label>\r\n                    <input onChange={(e)=>setEmail(e.target.value)} type=\"email\" required={true} />\r\n                </div>\r\n                <div>\r\n                    <label>Password </label>\r\n                    <input onChange={(e)=>setPassword(e.target.value)} type=\"password\" required={true} />\r\n                </div>\r\n                <section>\r\n                    <button type=\"submit\">Sign in</button>\r\n                    <Link to=\"/signup\" >create new account </Link>\r\n                </section>\r\n                {loading?<Spinner/>:error?<Status isOpen={true} message={error.message} />:null}\r\n        </form>\r\n            \r\n    </>\r\n}\r\n\r\nexport default Login\r\n",["183","184"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\CTC.js",["185"],"import React, { useEffect, useRef } from \"react\"\r\n\r\nconst useClickToClose = (closeHandler,selector) =>{\r\n  let node = useRef();\r\n  useEffect(() => {\r\n         let clickHandler\r\n         if(node.current){\r\n            clickHandler = (e)=>{\r\n                const element = document.querySelector(selector)\r\n                if(element){\r\n                    if(!element.contains(e.target)){\r\n                        closeHandler()\r\n                    }\r\n                }\r\n\r\n            }\r\n         }\r\n       \r\n        \r\n    document.addEventListener(\"mousedown\", clickHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", clickHandler);\r\n    };\r\n\r\n  });\r\n\r\n  return node;\r\n}\r\n\r\nexport  {useClickToClose};","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\helpers.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Status.js",["186","187"],"import React, { useEffect, useState } from 'react'\r\n\r\nconst Status = (props) => {\r\n    return <>\r\n        <div id=\"status\">\r\n            <span className={`status-${props.status}`}><i class=\"fas fa-times-circle\"></i> </span>\r\n            <span className=\"status-message\">{props.message}</span>\r\n        </div>\r\n    </>\r\n    \r\n}\r\n\r\nexport default Status;\r\n",["188","189"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AddTask.js",["190","191","192","193","194"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Board.js",["195","196","197","198","199","200"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AddUsers.js",["201","202","203"],"import React, {useState } from 'react'\r\nimport {useLazyQuery, useMutation, useQuery} from '@apollo/client'\r\nimport {searchUsersQuery} from '../queries/userQueries'\r\nimport {addUsersGroupMutation} from '../queries/projectQueries'\r\nimport {useClickToClose} from '../helpers/CTC'\r\n\r\nconst AddUsers = ({isOpen,close,project}) => {\r\n    const [users,setUsers] = useState([])\r\n    const [showUsers,setShowUsers] = useState([])\r\n    \r\n    const [searchUsers, {loading,data}] = useLazyQuery(searchUsersQuery)\r\n    const [addUsers] = useMutation(addUsersGroupMutation)\r\n\r\n    const searchRes = document.querySelector(\".search-result\")\r\n    \r\n    const debounce = (func, wait, immediate)=> {\r\n        let timeout;\r\n        return function executedFunction() {\r\n          const context = this;\r\n          const args = arguments;\r\n              \r\n          const later =()=> {\r\n            timeout = null;\r\n            if (!immediate) func.apply(context, args);\r\n          };\r\n      \r\n          const callNow = immediate && !timeout;\r\n          \r\n          clearTimeout(timeout);\r\n      \r\n          timeout = setTimeout(later, wait);\r\n          \r\n          if (callNow) func.apply(context, args);\r\n        };\r\n      };\r\n\r\n      const clearSearch = ()=>{\r\n        const searchRes = document.querySelector(\".search-result\")\r\n        searchRes.classList.add(\"hide-search\")\r\n        }\r\n\r\n        const domNode = useClickToClose(clearSearch,\".search-result\")\r\n\r\n      const searchResult = debounce(async(keyword)=>{\r\n        if(searchRes){\r\n          searchRes.classList.remove(\"hide-search\")\r\n          }\r\n         if(keyword){\r\n             searchUsers({variables:{\r\n                keyword\r\n            }})\r\n         } \r\n        },200)\r\n\r\n    const handleAddUser = (e) => {\r\n        setUsers([...new Set([...users,e.target.attributes.value.value])])\r\n        setShowUsers([...new Set([...showUsers,e.target.attributes.userName.value])])\r\n    }\r\n\r\n    const handleDelUser = (e)=>{\r\n        const user = e.target.previousElementSibling.textContent\r\n        console.log(user)\r\n        setShowUsers(showUsers.filter(name => {return name != user}))\r\n    }\r\n\r\n    \r\n    const handleAddGroup = ()=>{\r\n        addUsers({variables:{\r\n            id:project._id,\r\n            users\r\n        }})\r\n\r\n        close()\r\n        \r\n    }\r\n\r\n    if(!isOpen){\r\n        return null\r\n    }\r\n    return <>\r\n        <div className=\"overlay\"></div>\r\n        <div className=\"add-users new-project \">\r\n        <div className=\"stages show-users\" >\r\n            <div>\r\n                <label>Users</label>\r\n                    <div ref={domNode} className=\"add-stages users-add\">\r\n                        <input ref={domNode} className=\"search-input\"\r\n                         onChange={(e)=>searchResult(e.target.value)} type=\"text\" placeholder=\"Search for users with email\" >\r\n                        </input>\r\n                        <div  className=\"search-result hide-search\">\r\n                                <ul>\r\n                                    {data&&data.searchUsers.map(user => \r\n                                        <li value={user._id} userName={user.userName}\r\n                                        onClick={(e)=> handleAddUser(e)}>\r\n                                            <span>{user.userName}</span>\r\n                                            <div>{user.email}</div>\r\n                                        </li>    \r\n                                    )}\r\n                                </ul>\r\n                            </div>\r\n                    </div>\r\n                    <div className=\"list-users list-stages\">\r\n                        {showUsers.map(user => \r\n                            <div>\r\n                                <span className=\"stage\">{user}</span>\r\n                                <button onClick={(e)=>handleDelUser(e)} >-</button>\r\n                            </div>\r\n                        )}  \r\n                    </div>\r\n                        \r\n                 </div>\r\n            </div>\r\n            <div className=\" add-project-btns\" >\r\n                    <button onClick={()=> handleAddGroup()} className=\"confirm\" >Add Members</button>\r\n                    <button onClick={close} className=\"cancel\">Cancel</button>\r\n            </div>\r\n        </div>\r\n            \r\n        \r\n    </>\r\n}\r\n\r\nexport default AddUsers\r\n",["204","205"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Grid.js",["206","207","208","209"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\SideMenu.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Timline.js",["210","211"],"import React, {  useState } from 'react'\r\nimport {useMutation} from '@apollo/client'\r\nimport {updateTaskMutation,getProjectDetailsQuery} from '../queries/projectQueries'\r\nimport Node from '../components/Node'\r\nimport Bar from '../components/Bar'\r\nimport {getDeffrenceInDays,modifyDate,addDays,removeDays} from '../helpers/helpers'\r\n\r\n\r\nconst Timline = (props) => {\r\n    const {project,zoom} = props \r\n    const [index, setIndex] = useState()\r\n    let cdate\r\n    if(index){\r\n        cdate =modifyDate((Number(project.createdAt)+index*86400000))\r\n     }\r\n\r\n    const [updateTask] = useMutation(updateTaskMutation)\r\n\r\n    const handleEditEndDate = (id,date,days)=>{\r\n        updateTask({\r\n            variables:{\r\n                id,\r\n                updatedFields:{end:addDays(date,(index-days)).toISOString(\"YYYY-MM-DD\").split('T')[0]}\r\n            },\r\n            refetchQueries:[{query:getProjectDetailsQuery,variables:{id:project._id}}]\r\n        })\r\n        setIndex(null)\r\n    }\r\n\r\n    const handleEditStartDate = (id,date,days)=>{\r\n        updateTask({\r\n            variables:{\r\n                id,\r\n                updatedFields:{start:addDays(date,(index-days)).toISOString(\"YYYY-MM-DD\").split('T')[0]}\r\n            },\r\n            refetchQueries:[{query:getProjectDetailsQuery,variables:{id:project._id}}]\r\n        })\r\n        setIndex(null)\r\n\r\n    }\r\n\r\n    const getInitialGrid = () => {\r\n        const grid = [];\r\n        for (let col = 0; col < 53; col++) {\r\n            grid.push(col);\r\n          }\r\n        \r\n        return grid;\r\n      };\r\n      const grid = getInitialGrid()\r\n      \r\n     \r\n    return (\r\n        <div className=\"timeline\">\r\n            <div className=\"changing-date\">{cdate ? cdate:null}</div>\r\n            <div className=\"timeline-side\" >\r\n                {project.tasks.map(task => \r\n                    <div className=\"timline-side-task\">{task.name}</div>    \r\n                )}\r\n            </div>\r\n            <div className=\"timeline-main\">\r\n                {project.tasks.map(task => {\r\n                    const days = getDeffrenceInDays(task.end,task.start)\r\n                    const daysBeforStart =getDeffrenceInDays(task.start,modifyDate(project.createdAt))\r\n                   \r\n                  return ( <div className=\"timline-task\" >\r\n                       <Bar length={days} befor={daysBeforStart} task={task} handleEditEndDate={handleEditEndDate} \r\n                        handleEditStartDate={handleEditStartDate} /> \r\n                        <div className=\"row-grid\">\r\n                            {grid.map(x => \r\n                                <Node index = {x+1} setIndex={setIndex} />    \r\n                            )}\r\n                        </div>\r\n                   </div>) \r\n                }\r\n                )}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timline\r\n\r\n","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Spinner.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ProjectCard.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\AdditionalColumns.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\ProjectScreen.js",["212","213","214"],"import React, { useEffect, useState } from 'react'\r\nimport Grid from '../components/Grid'\r\nimport Board from '../components/Board'\r\nimport Timline from '../components/Timline'\r\nimport {getProjectDetailsQuery} from '../queries/projectQueries'\r\nimport {useQuery} from '@apollo/client'\r\nimport AddUsers from '../components/AddUsers'\r\nimport GroupSearch from '../components/GroupSearch'\r\nimport {useClickToClose} from '../helpers/CTC'\r\nimport Filters from '../components/Filters'\r\nimport Status from '../components/Status'\r\n\r\n\r\n\r\n\r\nconst ProjectScreen = (props) => {\r\n    const userData = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")) : null \r\n    let userID \r\n    if(userData){\r\n        userID = userData.id\r\n    }\r\n    const id = props.match .params.id;\r\n    \r\n    const [addUserOpen,setAddUserOpen] = useState(false)\r\n    const [view,setView] = useState(\"grid\")\r\n    const [tasks,setTasks] = useState([])\r\n    const [from,setFrom] = useState(0)\r\n    const [to,setTo] = useState(0)\r\n    const [zoom,setZoom] = useState(50)\r\n    const [filters,setFilters] = useState([])\r\n    const [boardfilter,setBoardFilter] = useState(\"bucket\")\r\n\r\n\r\n    const hideGroupSearch = ()=>{\r\n        const menu = document.getElementById(\"group-search\")\r\n        menu.classList.add(\"hide-v\")\r\n    }\r\n    const showGroupSearch = ()=>{\r\n        const menu = document.getElementById(\"group-search\")\r\n        menu.classList.remove(\"hide-v\")\r\n    }\r\n\r\n    const domNode = useClickToClose(hideGroupSearch,\".group-search\")\r\n\r\n    \r\n    const {loading,error,data} = useQuery(getProjectDetailsQuery,{\r\n        variables:{\r\n            id\r\n        }\r\n    })\r\n\r\n    let project\r\n    if(data){\r\n        project  = data.projectDetails\r\n    }\r\n\r\n    const showFilters = ()=>{\r\n        const filters = document.querySelector(\".filters-panel\")\r\n        filters.classList.remove(\"hide-v\")\r\n    }\r\n\r\n    const hideFilters = ()=>{\r\n        const filters = document.querySelector(\".filters-panel\")\r\n        filters.classList.add(\"hide-v\")\r\n    }\r\n\r\n    const filtersNode = useClickToClose(hideFilters,\".filters-panel\")\r\n\r\n    const filterByUser = (element) => {\r\n        setTasks( tasks.filter(task =>{return task.assignedTo.some(user => user._id === element.value)}))\r\n        setFilters([...filters,{filter:\"Group Member\",value:element.attributes.name.value}])\r\n    }\r\n    \r\n    const filterByBucket =(bucket) =>{\r\n        setTasks(tasks.filter(task => {return task.bucket === bucket}))\r\n        setFilters([...filters,{filter:\"Bucket\",value:bucket}])\r\n    }\r\n\r\n    const filterByCompletion = () =>{\r\n        setTasks(tasks.filter(task => {return task.completion >= from && task.completion <= to }))\r\n        setFilters([...filters,{filter:\"Completion\",value:`from : ${from} to : ${to}`}])\r\n    }\r\n\r\n    const filterByDuration = () => {\r\n        setTasks(tasks.filter(task => {return task.duration >= from && task.completion <= to }))\r\n        setFilters([...filters,{filter:\"Duration\",value:`from : ${from} to : ${to}`}])\r\n    }\r\n\r\n    const clearFilters = ()=>{\r\n        setTasks(project.tasks)\r\n        setFilters([])\r\n    }\r\n\r\n \r\n   \r\n\r\n    useEffect(() => {\r\n       \r\n       if(project){\r\n           setTasks(project.tasks)\r\n       }\r\n    }, [data,props])\r\n    \r\n    return <>\r\n       { loading ? \r\n            <div>loading</div>\r\n        : error ?\r\n            <Status isOpen={true} message={error.message} />\r\n       :data? \r\n       <div className=\"project-page\" >\r\n           <div className=\"proj-header\">\r\n                <div>\r\n                    <h1>{project.name}</h1>\r\n                    <div className=\"view-links\">\r\n                        <button onClick={()=>setView(\"grid\")} >Grid</button>\r\n                        <button onClick={()=>setView(\"board\")} >Board</button>\r\n                        <button onClick={()=>setView(\"timline\")} >Timeline</button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"manage\" >\r\n                    <div className=\"filter\" >\r\n                       {view === \"board\" ? \r\n                        <>\r\n                            <label>Group by </label>\r\n                            <select defaultValue={boardfilter} >\r\n                                <option onClickCapture={(e)=>setBoardFilter(e.target.value)}>bucket</option>\r\n                                <option  onClickCapture={(e)=>setBoardFilter(e.target.value)} >progresion</option>\r\n                            </select>\r\n                        </> \r\n                        : view===\"grid\"?\r\n                        <>\r\n                            <div className=\"filters\" >\r\n                                <button onClick={()=>showFilters()}>\r\n                                    ({filters.length}) filters\r\n                                    <i class=\"fas fa-filter\"></i>\r\n                                    </button>\r\n                                <Filters project={project} filterByCompletion={filterByCompletion} filterByUser={filterByUser} \r\n                                    filterByBucket={filterByBucket} filterByDuration={filterByDuration} domNode={filtersNode}\r\n                                     clearFilters={clearFilters} filters={filters} setFrom={setFrom} setTo={setTo} />\r\n                            </div>\r\n                        </> : <>\r\n                            <label>zoom</label>\r\n                            <input type=\"range\" min=\"0\" max=\"100\" defaultValue=\"50\" onChange={(e=>setZoom(e.target.value))} />\r\n                        </>}\r\n                    </div>\r\n                    <div className=\"users\">\r\n                        <div className=\"group-members\" >\r\n                            <button onClick={()=> showGroupSearch()} className=\"group-members-btn\" >Group mempers ({project.group.length}) \r\n                                <i class=\"fas fa-chevron-down\"></i>\r\n                            </button>\r\n                            \r\n                        </div>\r\n                        {project.owner._id == userID?<button onClick={()=>setAddUserOpen(true)} className=\"group\" >\r\n                            Add Members<i class=\"fas fa-user-plus\"></i>\r\n                        </button>:null}\r\n                        \r\n                        <GroupSearch  group={project.group} projectID={project._id} type=\"show\"\r\n                         domNode={domNode} position={\"group-search-container\"} />\r\n                        \r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            <div className=\"proj-body\" >\r\n                {view===\"grid\"?\r\n                    <Grid  tasks={tasks} project={project}/>:view===\"board\"?\r\n                    <Board filter={boardfilter} project={project}/>:\r\n                    <Timline project={project} zoom={zoom}/>\r\n                }\r\n            </div>\r\n        </div>:null}\r\n\r\n        <AddUsers isOpen={addUserOpen} close={()=>setAddUserOpen(false)} project={project} />\r\n        <svg className=\"draw\" ></svg>\r\n   </>\r\n}\r\n\r\nexport default ProjectScreen\r\n","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\SignedUser.js",["215","216"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowDependacy.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\index.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\queries\\projectQueries.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\queries\\userQueries.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\helpers\\dragAndDrop.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Relation.js",["217","218","219","220","221"],"import React, { useEffect, useState } from 'react'\r\n\r\nconst Relation = ({id1,id2,left}) => {\r\n\r\n    const colors = ['#16c79a', '#19456b', '#11698e','#e7d9ea', '#583d72', '#fa9579','#fdb827', '#bedbbb', '#839b97'];\r\n    const random_color = colors[Math.floor(Math.random() * colors.length)];\r\n    \r\n    const [x1,setX1] = useState()\r\n    const [y1,sety1] = useState()\r\n   \r\n    let box1 , box2 \r\n    \r\n    useEffect(() => {\r\n        const element1 = document.getElementById(id1)\r\n        const element2 = document.getElementById(id2)\r\n       if(element1,element2){\r\n\r\n           box1 = element1.getBoundingClientRect()\r\n           box2 = element2.getBoundingClientRect()\r\n           sety1(box2.y-box1.y)\r\n           setX1(box2.x-(box1.x+box1.width))\r\n           console.log(box2.left)\r\n           console.log(box1.left)\r\n       }\r\n        \r\n    }, [x1])\r\n        \r\n    console.log(y1)\r\n    return <>\r\n        {y1 > 0 ?\r\n        <svg className=\"draw\" style={{left:left+\"px\"}} >\r\n            <polyline points={`0,0 25,0 25,${y1} ${x1},${y1}`} fill=\"none\" strokeWidth=\"4\" stroke={random_color} />\r\n        </svg>\r\n        :\r\n        <svg className=\"drawv2\" style={{left:left+\"px\"}} >\r\n            <polyline points={`0,600 25,600 25,${600+y1} ${x1},${600+y1}`} fill=\"none\" strokeWidth=\"4\" stroke={random_color} />\r\n        </svg>\r\n        }\r\n    </>\r\n}\r\n\r\nexport default Relation\r\n\r\n{/* <div className=\"timeline\">\r\n            <div className=\"changing-date\">{cdate ? cdate:null}</div>\r\n            <div className=\"timeline-side\" ></div>\r\n            <div className=\"timeline-main\">\r\n                {project.tasks.map(task => {\r\n                    const days = getDeffrenceInDays(task.end,task.start)\r\n                    const daysBeforStart =getDeffrenceInDays(task.start,modifyDate(project.createdAt))\r\n                   \r\n                  return ( <div className=\"timline-task\"  >\r\n                       <Bar length={days} befor={daysBeforStart} task={task} handleEditEndDate={handleEditEndDate} \r\n                        handleEditStartDate={handleEditStartDate} /> \r\n                        <div className=\"row-grid\">\r\n                            {grid.map(x => \r\n                                <Node index = {x+1} setIndex={setIndex} />    \r\n                            )}\r\n                        </div>\r\n                   </div>) \r\n                }\r\n                )}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n} */}\r\n\r\n\r\n{/* <svg  width=\"62\" height=\"600\" pointer-events=\"none\" position=\"absolute\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n\r\n<path d=\"M 0 0 L 25 0 A 3 3 0 0,1 28 3 L 28 250  A 3 3 0 0,0 31 253 L 56 253 \" transform=\"translate(3,3)\" pointer-events=\"visibleStroke\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"rgb(132, 172, 179)\"  stroke-width=\"4\"></path>\r\n\r\n</svg>\r\n<svg  width=\"62\" height=\"600\" pointer-events=\"none\" position=\"absolute\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" >\r\n    <path d=\"M 50 0 L 25 0 A 3 3 0 0,0 24 3 L 25 250  A 3 3 0 0,1 24 253 L 0 253 \" transform=\"translate(3,3)\" pointer-events=\"visibleStroke\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"rgb(132, 172, 179)\" stroke-width=\"5\"></path>\r\n</svg> */}\r\n\r\n/* \r\n<path d={`M ${box1.x} ${box1.y} L ${box1.x+25} ${box1.y} A 3 3 0 0,1 ${box1.x+28} ${box1.y+3} L ${box1.x+28} ${box1.y+250}  A 3 3 0 0,0 ${box1.x+31} ${box1.y+253} L ${box1.x+56} ${box1.y+253} `}\r\n             transform=\"translate(3,3)\" pointer-events=\"visibleStroke\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" \r\n             fill=\"none\" stroke=\"rgb(132, 172, 179)\"   stroke-width=\"4\"></path> */","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\UnRegisteredRoute.js",["222","223","224","225"],"import React, { useEffect } from \"react\"\r\nimport {Route, Redirect} from \"react-router-dom\"\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\n const UnRegisteredRoute = ({component:Component,...rest}) =>{\r\n    const userInfo = localStorage.getItem(\"userInfo\")\r\n    const history = useHistory()\r\n  /* \r\n  useEffect(() => {\r\n        if(userInfo){\r\n            history.push(\"/\")\r\n        }\r\n    }, [userInfo])\r\n */\r\n    \r\n\r\n    return (\r\n        <Route {...rest} render = {props => {\r\n            return <Component {...props} />\r\n        }} />\r\n    )\r\n}\r\n\r\nexport default UnRegisteredRoute;","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\UpdateProfile.js",["226"],"import React, { useState } from 'react'\r\nimport {changePasswordMutation,getProfileInfoQuery,updateProfileMutation} from '../queries/projectQueries'\r\nimport {useMutation} from '@apollo/client'\r\nimport Status from './Status'\r\nimport Spinner from './Spinner'\r\n\r\nconst UpdateProfile = ({isOpen,user,node,close}) => {\r\n    const userData = localStorage.getItem(\"userInfo\") ? JSON.parse(localStorage.getItem(\"userInfo\")):null \r\n\r\n    const [currentPassword,setCurrentPassword] = useState()\r\n    const [newPassword,setNewPassword] = useState()\r\n    const [confirmPassword,setConfirmPassword] = useState()\r\n    const [error,setError] = useState()\r\n\r\n    const [fullName,setFullName] = useState()\r\n    const [userName,setUserName] = useState()\r\n    const [email,setEmail] = useState()\r\n    \r\n    const [changePassword,{loading}] = useMutation(changePasswordMutation)\r\n    const [updateProfile,{loading:updateProfileLoading}] = useMutation(updateProfileMutation)\r\n\r\n    const handleChangePassword = async (e)=>{\r\n        e.preventDefault()\r\n        if(confirmPassword != newPassword){\r\n            setError(\"password should match\")\r\n            return\r\n        }\r\n       try{\r\n            const {data} = await changePassword({\r\n                variables:{\r\n                    currentPassword,\r\n                    newPassword\r\n                },\r\n            })\r\n            if(data){\r\n                localStorage.setItem(\"userInfo\",JSON.stringify(data.changePassword))\r\n            }\r\n            \r\n        }catch(err){\r\n            setError(err.message)\r\n        }\r\n    }\r\n\r\n    const handleUpdateProfile = async()=>{\r\n        try{\r\n           const {data} =  await updateProfile({\r\n                variables:{\r\n                    user:{\r\n                        userName,\r\n                        fullName,\r\n                        email\r\n                    },\r\n                },\r\n                refetchQueries:[{query:getProfileInfoQuery,variables:{id:userData.id}}]\r\n            })\r\n            if(data){\r\n                close()\r\n            }\r\n        }catch(err){\r\n            setError(err.message)\r\n        }\r\n\r\n    }\r\n\r\n    if(!isOpen){\r\n        return null\r\n    }\r\n    return<>\r\n        {userData&&<><div className=\"overlay\" ></div>\r\n        <div ref={node} className=\"edit-profile\" >\r\n            <h2 >Edit Profile</h2>\r\n            <div className=\"update-info\" >\r\n                <span className=\"edit-profile-header\" >Update Profile</span>\r\n                <div>\r\n                    <label>userName</label>\r\n                    <input onChange={(e)=>setUserName(e.target.value)} defaultValue={user.userName} type=\"text\" />\r\n                </div>\r\n                <div>\r\n                    <label>Full Name</label>\r\n                    <input onChange={(e)=>setFullName(e.target.value)} defaultValue={user.fullName} type=\"text\" />\r\n                </div>\r\n                <div>\r\n                    <label>Email</label>\r\n                    <input onChange={(e)=>setEmail(e.target.value)} defaultValue={user.email} type=\"email\" />\r\n                </div>\r\n                <div  className=\"update-btn\"><button onClick={handleUpdateProfile} >Update</button></div>\r\n                {updateProfileLoading?<Spinner />:null}\r\n            </div>\r\n            <form className=\"change-password\" onSubmit={(e)=>handleChangePassword(e)} >\r\n                <span className=\"edit-profile-header\" >change password</span>\r\n                <div>\r\n                    <label>Current Password</label>\r\n                    <input onChange={(e)=>setCurrentPassword(e.target.value)} required={true} type=\"password\" />\r\n                </div>\r\n                <div>\r\n                    <label>New Password</label>\r\n                    <input onChange={(e)=>setNewPassword(e.target.value)} required={true} type=\"password\" />\r\n                </div>\r\n                <div>\r\n                    <label>Confirm Password</label>\r\n                    <input onChange={(e)=>setConfirmPassword(e.target.value)} required={true} type=\"password\" />\r\n                </div>\r\n                <div className=\"update-btn\"><button >Update</button></div>\r\n                {loading?<Spinner /> :null}\r\n            </form>\r\n            {error?<Status isOpen={true} message={error} />:null}\r\n        </div></>}\r\n    </>\r\n}\r\n\r\nexport default UpdateProfile\r\n","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ProtectedRoute.js",["227","228","229","230"],"import React, { useEffect } from \"react\"\r\nimport {Route, Redirect} from \"react-router-dom\"\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\n const ProtectedRoute = ({component:Component,...rest}) =>{\r\n  const userInfo = localStorage.getItem(\"userInfo\")\r\n  const history = useHistory()\r\n\r\n  \r\n\r\n  /* useEffect(() => {\r\n        if(!userInfo){\r\n            history.push(\"/ghuest\")\r\n        }\r\n    }, [userInfo])\r\n */\r\n    return (\r\n        <Route {...rest} render = {props => {\r\n            return <Component {...props} />\r\n        }} />\r\n    )\r\n  \r\n    \r\n}\r\n\r\nexport default ProtectedRoute;","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\Profile.js",["231","232","233"],"import React, { useEffect, useState } from 'react'\r\nimport {useQuery} from '@apollo/client'\r\nimport {getProfileInfoQuery} from '../queries/projectQueries'\r\nimport Spinner from '../components/Spinner'\r\nimport Status from '../components/Status'\r\nimport {modifyDate} from '../helpers/helpers'\r\nimport UpdateProfile from '../components/UpdateProfile'\r\nimport {useClickToClose} from '../helpers/CTC'\r\n\r\nconst Profile = (props) => {\r\n    const userData =localStorage.getItem(\"userInfo\")?JSON.parse(localStorage.getItem(\"userInfo\")):null\r\n    const id = props.match.params.id\r\n    let AllowEdit\r\n    if(userData && userData.id == id){\r\n        AllowEdit = true\r\n    }\r\n    const {loading,error,data} =useQuery(getProfileInfoQuery,{variables:{id}})\r\n    const [isOpen,setIsOpen] = useState(false)\r\n    const [isUploaded,setIsUploaded] = useState(false) \r\n    const [uploadError,setError] = useState() \r\n    const domNode = useClickToClose(()=>setIsOpen(false),\".edit-profile\")\r\n\r\n    \r\n    const uploadHandler = async(e)=>{\r\n        const file = e.target.files[0]\r\n        const formData = new FormData()\r\n        formData.append(\"image\",file)\r\n\r\n        fetch(\"/upload/\",{\r\n            headers:{\r\n              Authorization: `Bearer ${userData.token}`,\r\n              },\r\n              body:formData,\r\n              method:\"POST\"\r\n          })\r\n          .then(res => res.json())\r\n          .then(data => document.location.reload())\r\n          .catch(err => setError(\"Somthing went wrong when trying to update the profile image, please try again\"))\r\n      \r\n    }\r\n\r\n    useEffect(() => {\r\n       \r\n    }, [isUploaded])\r\n\r\n    if(loading){\r\n        return <Spinner/>\r\n    }\r\n    if(error){\r\n        return <Status isOpen={true} message={error.message} />\r\n    }\r\n    return <>\r\n         <div className=\"profile\">\r\n            {AllowEdit?<button onClick={()=>setIsOpen(true)} className=\"edit-profile-btn\" ><i class=\"far fa-edit\"></i></button>:null}\r\n            <div className=\"profile-img\" >\r\n                <img src={`../${data.profile.user._id}.jpg`} />\r\n                {AllowEdit?<div>\r\n                    <label for=\"upload-image\" className=\"upload-image\" ><i class=\"fal fa-camera-alt\"></i></label >\r\n                    <input onChange={(e)=>uploadHandler(e)} type=\"file\" id=\"upload-image\" className=\"hide\" />\r\n                </div>:null}\r\n            </div>\r\n              <div className=\"profile-name\">\r\n                  <span className=\"full-name\" >{data.profile.user.fullName}</span>\r\n                  <span>@{data.profile.user.userName}</span>\r\n                  <span>{`joined at ${modifyDate(Number(data.profile.user.createdAt))}`}</span>\r\n              </div>\r\n              <div className=\"profile-info\"  >\r\n                <div className=\"profile-email\">\r\n                    <i class=\"far fa-envelope\"></i>\r\n                    <span >{data.profile.user.email}</span>\r\n                </div>\r\n                    <div>\r\n                            <i class=\"fas fa-project-diagram\"></i>\r\n                            <span>Created Projects :  </span>\r\n                            <span>{data.profile.createdProjects}</span>\r\n                        </div>\r\n                        <div>\r\n                            <i class=\"fas fa-project-diagram\"></i>\r\n                            <span>Projects participated In  :  </span>\r\n                            <span>{data.profile.sharedProjects}</span>\r\n                    </div>\r\n              </div>\r\n              {uploadError&&<Status isOpen={true} message={uploadError} />}\r\n        </div> \r\n        <UpdateProfile isOpen={isOpen} close={()=>setIsOpen(false)} user={data.profile.user} node={domNode} />\r\n    </>\r\n}\r\n\r\nexport default Profile\r\n","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\SignScreen.js",["234","235","236","237"],"import React, { useEffect, useState } from 'react'\r\nimport {Route, useHistory } from 'react-router-dom'\r\nimport Login from '../components/Login'\r\nimport RegisterScreen from '../screens/RegisterScreen'\r\nimport GhuestScreen from './GhuestScreen'\r\n\r\nconst SignScreen = () => {\r\n    const history = useHistory()\r\n    return (\r\n        <div className=\"register\" >\r\n            <section className=\"img-container\" >\r\n                <img src=\"./Business_SVG.svg\" />\r\n            </section>\r\n            <Route path=\"/signup\" component={RegisterScreen} />\r\n            <Route path=\"/signin\" component={Login} />\r\n            <Route path=\"/ghuest\" component={GhuestScreen} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignScreen\r\n","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\Main.js",["238","239","240"],"import React, { useEffect, useState } from 'react'\r\nimport NewProject from '../components/NewProject'\r\nimport ProjectCard from '../components/ProjectCard'\r\nimport {useQuery} from '@apollo/client'\r\nimport {getProjectsQuery} from '../queries/projectQueries'\r\nimport ShowProjects from '../components/ShowProjects'\r\nimport {useClickToClose} from '../helpers/CTC'\r\nimport Status from '../components/Status'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Main = () => {\r\n    const userInfo =localStorage.getItem(\"userInfo\")\r\n    const history = useHistory()\r\n\r\n    const [isOpen,setIsOpen] = useState(false)\r\n    const [projectstype,setProjectsType] = useState(\"mine\")\r\n    \r\n    const {data,loading,error} = useQuery(getProjectsQuery)\r\n\r\n    const hideMenu = ()=>{\r\n        const menu = document.querySelector(\".project-menu:not(.hide)\")\r\n        if(menu){\r\n            menu.classList.add(\"hide\")\r\n        }\r\n    }\r\n \r\n    const domNode = useClickToClose(hideMenu,\".project-menu:not(.hide)\")\r\n\r\n    const changeProjectshandler = (type)=>{\r\n        const myBtn = document.getElementById(\"my-projects\")\r\n        const sharedBtn = document.getElementById(\"shared-projects\")\r\n        setProjectsType(type)\r\n        if(type===\"mine\"){\r\n            myBtn.classList.add(\"show-btn\")\r\n            sharedBtn.classList.remove(\"show-btn\")\r\n        }else{\r\n            myBtn.classList.remove(\"show-btn\")\r\n            sharedBtn.classList.add(\"show-btn\")\r\n\r\n        }\r\n    }\r\n\r\n    \r\n    if(loading){\r\n        return <div>loading</div>\r\n    }\r\n    if(error){\r\n        return <Status isOpen={true} message={error.message} />\r\n    }\r\n    return <>\r\n        <div className=\"main-page\">\r\n           <div className=\"add-new-project\" >\r\n                <button onClick={()=>setIsOpen(true)}><i class=\"fas fa-plus\"></i>Add new project</button>\r\n            </div>\r\n           {data&&data.projects.favorites.length>0 ? <div className=\"favorites\">\r\n                <div className=\"fav-header\" >Favorites</div>\r\n                <div ref={domNode} className=\"fav-body\" >\r\n                    {data.projects.favorites.map(project => \r\n                        <ProjectCard  project={project} close={()=>hideMenu} />\r\n                    )}\r\n                </div>\r\n            </div>: null}\r\n            <div className=\"my-project\" >\r\n                <div className=\"my-projects-btns\">\r\n                    <button className=\"show-btn\" id=\"my-projects\" onClick={()=>changeProjectshandler(\"mine\")} >Created by me </button>\r\n                    <button id=\"shared-projects\"  onClick={()=>changeProjectshandler(\"shared\")} >Shared with me </button>\r\n                </div>\r\n                <ShowProjects data = { data ? projectstype ===\"mine\" ? data.projects.myProjects : data.projects.sharedProjects : []}\r\n                 type={projectstype} favorites={data.projects.favorites}  />\r\n            </div>\r\n        </div>\r\n        <NewProject isOpen={isOpen} close={()=>setIsOpen(false)} />\r\n    </>\r\n    \r\n}\r\n\r\nexport default Main\r\n","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowAssghnedTo.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\TaskMenu.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\unSignedUser.js",[],["241","242"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Node.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Assigh.js",["243","244","245"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ClickToClose.js",["246"],"import React, { useEffect, useRef } from \"react\"\r\n\r\nconst useClickToClose = (closeHandler,x,) =>{\r\n  let node = useRef();\r\n  useEffect(() => {\r\n      let clickHandler\r\n    if(node.current){\r\n         clickHandler = (event) => {\r\n      if(!node.current.contains(event.target) && !x.current.contains(event.target) ){\r\n        closeHandler();\r\n      }else if (!node.current.contains(event.target) && !x.current.contains(event.target) ) {\r\n        closeHandler();\r\n      }\r\n    };\r\n\r\n    }\r\n   \r\n    document.addEventListener(\"mousedown\", clickHandler);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", clickHandler);\r\n    };\r\n\r\n  });\r\n\r\n  return node;\r\n}\r\n\r\nexport  {useClickToClose};","D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\screens\\GhuestScreen.js",["247","248","249"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\TaskCard.js",["250"],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\Bar.js",[],"D:\\PROGRAMMING\\projects\\Project-mangment\\Project-Manger-App\\frontend\\src\\components\\ShowProjects.js",["251","252","253","254","255","256"],{"ruleId":"257","severity":1,"message":"258","line":2,"column":30,"nodeType":"259","messageId":"260","endLine":2,"endColumn":35},{"ruleId":"261","replacedBy":"262"},{"ruleId":"263","replacedBy":"264"},{"ruleId":"257","severity":1,"message":"265","line":4,"column":16,"nodeType":"259","messageId":"260","endLine":4,"endColumn":24},{"ruleId":"257","severity":1,"message":"266","line":15,"column":11,"nodeType":"259","messageId":"260","endLine":15,"endColumn":18},{"ruleId":"261","replacedBy":"267"},{"ruleId":"263","replacedBy":"268"},{"ruleId":"257","severity":1,"message":"269","line":1,"column":8,"nodeType":"259","messageId":"260","endLine":1,"endColumn":13},{"ruleId":"257","severity":1,"message":"270","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"271","line":1,"column":28,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"261","replacedBy":"272"},{"ruleId":"263","replacedBy":"273"},{"ruleId":"257","severity":1,"message":"271","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":25},{"ruleId":"274","severity":1,"message":"275","line":22,"column":61,"nodeType":"276","messageId":"277","endLine":22,"endColumn":63},{"ruleId":"274","severity":1,"message":"275","line":28,"column":26,"nodeType":"276","messageId":"277","endLine":28,"endColumn":28},{"ruleId":"274","severity":1,"message":"275","line":28,"column":77,"nodeType":"276","messageId":"277","endLine":28,"endColumn":79},{"ruleId":"278","severity":1,"message":"279","line":125,"column":21,"nodeType":"280","endLine":125,"endColumn":96},{"ruleId":"257","severity":1,"message":"281","line":24,"column":11,"nodeType":"259","messageId":"260","endLine":24,"endColumn":18},{"ruleId":"274","severity":1,"message":"275","line":129,"column":47,"nodeType":"276","messageId":"277","endLine":129,"endColumn":49},{"ruleId":"274","severity":1,"message":"275","line":135,"column":44,"nodeType":"276","messageId":"277","endLine":135,"endColumn":46},{"ruleId":"274","severity":1,"message":"275","line":146,"column":92,"nodeType":"276","messageId":"277","endLine":146,"endColumn":94},{"ruleId":"274","severity":1,"message":"275","line":158,"column":92,"nodeType":"276","messageId":"277","endLine":158,"endColumn":94},{"ruleId":"274","severity":1,"message":"275","line":165,"column":51,"nodeType":"276","messageId":"277","endLine":165,"endColumn":53},{"ruleId":"257","severity":1,"message":"282","line":2,"column":36,"nodeType":"259","messageId":"260","endLine":2,"endColumn":44},{"ruleId":"257","severity":1,"message":"283","line":11,"column":26,"nodeType":"259","messageId":"260","endLine":11,"endColumn":33},{"ruleId":"274","severity":1,"message":"284","line":63,"column":60,"nodeType":"276","messageId":"277","endLine":63,"endColumn":62},{"ruleId":"261","replacedBy":"285"},{"ruleId":"263","replacedBy":"286"},{"ruleId":"257","severity":1,"message":"287","line":12,"column":8,"nodeType":"259","messageId":"260","endLine":12,"endColumn":22},{"ruleId":"274","severity":1,"message":"284","line":68,"column":70,"nodeType":"276","messageId":"277","endLine":68,"endColumn":72},{"ruleId":"274","severity":1,"message":"275","line":156,"column":71,"nodeType":"276","messageId":"277","endLine":156,"endColumn":73},{"ruleId":"274","severity":1,"message":"275","line":180,"column":28,"nodeType":"276","messageId":"277","endLine":180,"endColumn":30},{"ruleId":"257","severity":1,"message":"288","line":6,"column":47,"nodeType":"259","messageId":"260","endLine":6,"endColumn":57},{"ruleId":"257","severity":1,"message":"289","line":10,"column":20,"nodeType":"259","messageId":"260","endLine":10,"endColumn":24},{"ruleId":"290","severity":1,"message":"291","line":22,"column":16,"nodeType":"292","messageId":"293","endLine":22,"endColumn":35,"fix":"294"},{"ruleId":"295","severity":1,"message":"296","line":102,"column":8,"nodeType":"297","endLine":102,"endColumn":20,"suggestions":"298"},{"ruleId":"274","severity":1,"message":"275","line":153,"column":44,"nodeType":"276","messageId":"277","endLine":153,"endColumn":46},{"ruleId":"257","severity":1,"message":"266","line":6,"column":10,"nodeType":"259","messageId":"260","endLine":6,"endColumn":17},{"ruleId":"299","severity":1,"message":"300","line":39,"column":13,"nodeType":"301","endLine":39,"endColumn":49},{"ruleId":"302","severity":1,"message":"303","line":16,"column":19,"nodeType":"304","messageId":"305","endLine":16,"endColumn":20},{"ruleId":"295","severity":1,"message":"306","line":18,"column":19,"nodeType":"307","endLine":18,"endColumn":51},{"ruleId":"295","severity":1,"message":"308","line":19,"column":19,"nodeType":"307","endLine":19,"endColumn":51},{"ruleId":"309","severity":1,"message":"310","line":44,"column":1,"nodeType":"311","messageId":"312","endLine":67,"endColumn":6},{"ruleId":"309","severity":1,"message":"310","line":70,"column":1,"nodeType":"311","messageId":"312","endLine":77,"endColumn":11},{"ruleId":"257","severity":1,"message":"270","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"265","line":2,"column":16,"nodeType":"259","messageId":"260","endLine":2,"endColumn":24},{"ruleId":"257","severity":1,"message":"313","line":7,"column":11,"nodeType":"259","messageId":"260","endLine":7,"endColumn":19},{"ruleId":"257","severity":1,"message":"266","line":8,"column":11,"nodeType":"259","messageId":"260","endLine":8,"endColumn":18},{"ruleId":"274","severity":1,"message":"284","line":24,"column":28,"nodeType":"276","messageId":"277","endLine":24,"endColumn":30},{"ruleId":"257","severity":1,"message":"270","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"265","line":2,"column":16,"nodeType":"259","messageId":"260","endLine":2,"endColumn":24},{"ruleId":"257","severity":1,"message":"313","line":7,"column":9,"nodeType":"259","messageId":"260","endLine":7,"endColumn":17},{"ruleId":"257","severity":1,"message":"266","line":8,"column":9,"nodeType":"259","messageId":"260","endLine":8,"endColumn":16},{"ruleId":"274","severity":1,"message":"275","line":14,"column":32,"nodeType":"276","messageId":"277","endLine":14,"endColumn":34},{"ruleId":"257","severity":1,"message":"314","line":19,"column":23,"nodeType":"259","messageId":"260","endLine":19,"endColumn":36},{"ruleId":"299","severity":1,"message":"300","line":56,"column":17,"nodeType":"301","endLine":56,"endColumn":64},{"ruleId":"257","severity":1,"message":"270","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"271","line":1,"column":28,"nodeType":"259","messageId":"260","endLine":1,"endColumn":36},{"ruleId":"257","severity":1,"message":"266","line":8,"column":11,"nodeType":"259","messageId":"260","endLine":8,"endColumn":18},{"ruleId":"299","severity":1,"message":"300","line":12,"column":17,"nodeType":"301","endLine":12,"endColumn":49},{"ruleId":"257","severity":1,"message":"270","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":26},{"ruleId":"257","severity":1,"message":"313","line":12,"column":11,"nodeType":"259","messageId":"260","endLine":12,"endColumn":19},{"ruleId":"257","severity":1,"message":"266","line":13,"column":11,"nodeType":"259","messageId":"260","endLine":13,"endColumn":18},{"ruleId":"261","replacedBy":"315"},{"ruleId":"263","replacedBy":"316"},{"ruleId":"257","severity":1,"message":"317","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":21},{"ruleId":"299","severity":1,"message":"300","line":29,"column":28,"nodeType":"301","endLine":29,"endColumn":83},{"ruleId":"299","severity":1,"message":"300","line":40,"column":29,"nodeType":"301","endLine":40,"endColumn":84},{"ruleId":"257","severity":1,"message":"269","line":1,"column":8,"nodeType":"259","messageId":"260","endLine":1,"endColumn":13},{"ruleId":"257","severity":1,"message":"271","line":1,"column":27,"nodeType":"259","messageId":"260","endLine":1,"endColumn":35},{"ruleId":"295","severity":1,"message":"318","line":32,"column":8,"nodeType":"297","endLine":32,"endColumn":18,"suggestions":"319"},{"ruleId":"299","severity":1,"message":"300","line":43,"column":17,"nodeType":"301","endLine":43,"endColumn":42},{"ruleId":"274","severity":1,"message":"275","line":36,"column":39,"nodeType":"276","messageId":"277","endLine":36,"endColumn":41},{"ruleId":"257","severity":1,"message":"320","line":10,"column":17,"nodeType":"259","messageId":"260","endLine":10,"endColumn":21},{"ruleId":"299","severity":1,"message":"300","line":69,"column":29,"nodeType":"301","endLine":69,"endColumn":53},{"ruleId":"299","severity":1,"message":"300","line":70,"column":29,"nodeType":"301","endLine":70,"endColumn":54},{"ruleId":"299","severity":1,"message":"300","line":71,"column":29,"nodeType":"301","endLine":71,"endColumn":55},{"ruleId":"299","severity":1,"message":"300","line":72,"column":29,"nodeType":"301","endLine":72,"endColumn":50},{"ruleId":"274","severity":1,"message":"275","line":84,"column":66,"nodeType":"276","messageId":"277","endLine":84,"endColumn":68},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-native-reassign",["321"],"no-negated-in-lhs",["322"],"'Redirect' is defined but never used.","'history' is assigned a value but never used.",["321"],["322"],"'React' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.",["321"],["322"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'domNode' is assigned a value but never used.","'useQuery' is defined but never used.","'loading' is assigned a value but never used.","Expected '!==' and instead saw '!='.",["321"],["322"],"'ShowAssghnedTo' is defined but never used.","'removeDays' is defined but never used.","'zoom' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property params.","MemberExpression","unexpectedWhitespace",{"range":"323","text":"324"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'project'. Either include it or remove the dependency array.","ArrayExpression",["325"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","Assignments to the 'box1' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Assignments to the 'box2' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'userInfo' is assigned a value but never used.","'setIsUploaded' is assigned a value but never used.",["321"],["322"],"'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["326"],"'type' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[773,775],".",{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},"Update the dependencies array to be: [data, project, props]",{"range":"331","text":"332"},"Update the dependencies array to be: [history, userInfo]",{"range":"333","text":"334"},[3239,3251],"[data, project, props]",[940,950],"[history, userInfo]"]